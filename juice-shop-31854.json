{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/NoHardcodedCredentials/test",
              "name": "NoHardcodedCredentials/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/IBM/smart-email-support/commit/a21929524dc0906fc32369d65acfa417335822cc?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL63",
                    "lines": [
                      {
                        "line": "   }",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "   var config = require('./config.json');",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "   process.env.support_email_id = 'patternemailautomation@gmail.com';",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "   process.env.sendgrid_api_key = '';",
                        "lineNumber": 62,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   me = '';",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   password = ''",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   process.env.sendgrid_api_key = config.sendgrid_api_key;",
                        "lineNumber": 63,
                        "lineChange": "added"
                      },
                      {
                        "line": "   me = config.me;",
                        "lineNumber": 64,
                        "lineChange": "added"
                      },
                      {
                        "line": "   password = config.password",
                        "lineNumber": 65,
                        "lineChange": "added"
                      },
                      {
                        "line": "    //process.exit(1);",
                        "lineNumber": 66,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "const sgMail = require('@sendgrid/mail');",
                        "lineNumber": 402,
                        "lineChange": "none"
                      },
                      {
                        "line": "sgMail.setApiKey(sendgrid_api_key);",
                        "lineNumber": 403,
                        "lineChange": "none"
                      },
                      {
                        "line": "const msg = {",
                        "lineNumber": 404,
                        "lineChange": "none"
                      },
                      {
                        "line": "  to: emailDetails.emailSection.from,",
                        "lineNumber": 405,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/readium/readium-desktop/commit/2bedb5b474ba0a485a9f981aea8ffa43abad164a?diff=split#diff-78b4461ec5c61ac524f5719113995d00L183",
                    "lines": [
                      {
                        "line": "private downloadCatalog (user?: User) {",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "    let username = \"\";",
                        "lineNumber": 182,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let password = \"\";",
                        "lineNumber": 183,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 188,
                        "lineChange": "removed"
                      },
                      {
                        "line": "request.get(this.props.opds.url, (error: any, response: any, body: any) => {",
                        "lineNumber": 190,
                        "lineChange": "removed"
                      },
                      {
                        "line": "let req = request.get(this.props.opds.url, (error: any, response: any, body: any) => {",
                        "lineNumber": 187,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (response && response.statusCode === 401) {",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "        this.props.openDialog(",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 229,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (user) {",
                        "lineNumber": 230,
                        "lineChange": "added"
                      },
                      {
                        "line": "    req.auth(user.username, user.password);",
                        "lineNumber": 231,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 232,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 233,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dfoderick/fullcyclereact/commit/a6abd97bd776ce56da8ac321ad0e1b500f67721d?diff=split#diff-ca64812ac15b141271f726a5a95a3402L22",
                    "lines": [
                      {
                        "line": "const redis_port = 6379",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const redis_host = serverhost",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const redis_password = ''",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//Message envelope for putting messages on the bus",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "function redisclient(){",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var client = redis.createClient(redis_port, redis_host, {no_ready_check: true});",
                        "lineNumber": 99,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  client.auth(redis_password, function (err) {",
                        "lineNumber": 100,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  var client = redis.createClient(services.redis.port, services.redis.host, {no_ready_check: true});",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "  client.auth(services.redis.password, function (err) {",
                        "lineNumber": 55,
                        "lineChange": "added"
                      },
                      {
                        "line": "     if (err) throw err;",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "  });",
                        "lineNumber": 102,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* Update test dependencies",
                  "* Migrate user tests to frisby2",
                  "added get user for id test"
                ],
                "precision": "very-high",
                "repoDatasetSize": 210,
                "cwe": [
                  "CWE-798"
                ]
              }
            },
            {
              "id": "javascript/PT/test",
              "name": "PT/test",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/how-to-firebase/fogo/commit/a3d5054fa9e7da0201e2709d847102a00a525067?diff=split#diff-ef1bae33e98527602bd4e6bfe2fe6c04747d71e6655a5c718f7100b844c9bb6eL158",
                    "lines": [
                      {
                        "line": "  return `/tmp/${path.parse(filename).base}`;",
                        "lineNumber": 157,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return `/tmp/${Date.now()}`;",
                        "lineNumber": 157,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "function convertLocalFile(localFilename, versionName) {",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const cmd = getCmd(localFilename, versionName);",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return execPromise(cmd);",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getCmd(localFilename, versionName) {",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return `convert ${localFilename} -resize ${versionName}\\\\> ${localFilename}`;",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "function execPromise(cmd) {",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new Promise((resolve, reject) =>",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "    exec(cmd, (error, stdout) => (error ? reject(error) : resolve(stdout)))",
                        "lineNumber": 171,
                        "lineChange": "none"
                      },
                      {
                        "line": "  );",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 173,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getDestination(filename, versionName) {",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const filenameParts = filename.split('/');",
                        "lineNumber": 176,
                        "lineChange": "none"
                      },
                      {
                        "line": "  filenameParts[filenameParts.length - 2] = versionName;",
                        "lineNumber": 177,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return filenameParts.join('/');",
                        "lineNumber": 178,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 179,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getFile(admin, filename) {",
                        "lineNumber": 181,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return admin",
                        "lineNumber": 182,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .storage()",
                        "lineNumber": 183,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .bucket()",
                        "lineNumber": 184,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .file(filename);",
                        "lineNumber": 185,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "function unlinkPromise(localFilename) {",
                        "lineNumber": 188,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new Promise(",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "    (resolve, reject) => fs.unlink(localFilename, err => err && reject(err)) || resolve()",
                        "lineNumber": 190,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/zhoukekestar/modules/commit/b6c2fc78dc8679080b982124a24771f1466b2fb2?diff=split#diff-7347edae6e14bc50ee18f048e29145ce21cf3bb679d0391605c283ec246942bcL20",
                    "lines": [
                      {
                        "line": "res.sendFile(dir + '/' + req.params.id);",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// Test ok on winodws. Not sure that linux will be work ok.",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.sendFile((dir + '/' + req.params.id).replace(/\\//g, '\\\\\\\\'));",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/NodeBB/NodeBB/commit/cacc732015c64bba55a6ab45510086febccfb1b2?diff=split#diff-300f765b568b38163933bfcd40c75fe91709a35e9a7522bca2f8c5fe4b19195aL102",
                    "lines": [
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, req.files.userPhoto.name, req.files.userPhoto.path, res);",
                        "lineNumber": 101,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn;",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t}",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tvar absolutePath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), path.basename(oldpicture));",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfs.unlink(absolutePath, function(err) {",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tif(err) {\t\t\t\t",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tconsole.error('[%d] %s', Date.now(), + err);",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t}",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t});",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "function uploadUserPicture(uid, extension, tempPath, res) {",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif(!extension) {",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tres.send({",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\terror: 'Error uploading file! Error : Invalid extension!'",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\treturn;",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar filename = uid + '-profileimg' + extension;",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar uploadPath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), filename);",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t// @todo move to proper logging code - this should only be temporary",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tconsole.log('Info: Attempting upload to: '+ uploadPath);",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar is = fs.createReadStream(tempPath);",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar os = fs.createWriteStream(uploadPath);",
                        "lineNumber": 133,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- only tested with files",
                  "add integer support, and failing tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 760,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/HardcodedSecret",
              "name": "HardcodedSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/OriginProtocol/origin/commit/819a0adc70c0ca365e2763f384c419f98d992889?diff=split#diff-3a0fb050cbc279d8503f39fc1ccca7aeL13",
                    "lines": [
                      {
                        "line": "  */",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "function encrypt(str) {",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const key = crypto.scryptSync(encryptionSecret, 'salt', 24)",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const iv = Buffer.alloc(16, 0) // TODO: use a random iv",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const cipher = crypto.createCipheriv('aes-192-cbc', key, iv)",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  let encrypted = cipher.update(str, 'utf8', 'hex')",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  encrypted += cipher.final('hex')",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const iv = crypto.randomBytes(16)",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const cipher = crypto.createCipheriv(algorithm, key, iv)",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const encrypted = cipher.update(str, 'utf8', 'hex') + cipher.final('hex')",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return iv.toString('hex') + encrypted",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Midburn/Volunteers/commit/50cf644a3ddb072f8e8b927aac4c895cb40cfd91?diff=split#diff-8ee23682d0ff8afcd5263397c93de82eL32",
                    "lines": [
                      {
                        "line": "try {",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    jwt.verify(token, 'secret');",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    jwt.verify(token, SECRET);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "    next();",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 44,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/elifesciences/elife-xpub/commit/7f0797353fd42e638dd2ab3f36e790f626517daa?diff=split#diff-5d398477645cab4af9ca9b982a53cf5eL24",
                    "lines": [
                      {
                        "line": "  // TODO: This should come out of config",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return sign(payload, 'test')",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return sign(payload, process.env.JWT_SECRET || '')",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 24,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Refactor JWT tests",
                  "Use json config file for secrets and passwords.",
                  "add the jwt env file for token generate"
                ],
                "precision": "very-high",
                "repoDatasetSize": 194,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/UseCsurfForExpress",
              "name": "UseCsurfForExpress",
              "shortDescription": {
                "text": "Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n### Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.\n\n## References\n\n* [Express Documentation - Implement CSRF Protection](https://expressjs.com/en/resources/middleware/csurf.html)\n* [Node Security Checklist - CSRF](https://blog.risingstack.com/node-js-security-checklist/#csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/LukeLin/react-ocean/commit/9a13d57dedf6742ed06321a80ca2a5842fb8a72a?diff=split#diff-65890f102baa526da3cc5d65e0528ea728fa9fa63659a7f2e1d523686240359cR7",
                    "lines": [
                      {
                        "line": "import session from 'express-session';",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "import csurf from 'csurf';",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "import config from './config/config.json';",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "import routes from './routes';",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "import allowCrossDomain from './config/allowCrossDomain'",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "import { renderFile } from 'ejs';",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "let app = express();",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(process.env.NODE_ENV !== 'production'){",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let webpack = require('webpack');",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let config = require('../create-webpack.config')(true);",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let webpackDevMiddleware = require('webpack-dev-middleware');",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let webpackHotMiddleware = require('webpack-hot-middleware');",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    let compiler = webpack(config);",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    app.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    app.use(webpackHotMiddleware(compiler));",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.set('host', process.env.IP || '127.0.0.1');",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.set('port', process.env.PORT || 36000);",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.disable('x-powered-by');",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.set('view engine', 'ejs');",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', __dirname + '/views');",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.engine('html', renderFile);",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(compress());",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(logger('dev'));",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json());",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: true }));",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser());",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    resave: true,",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    saveUninitialized: true,",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    secret: \"notagoodsecret\",",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    cookie: {httpOnly: true}",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "}));",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "// app.use(favicon(__dirname + '/../public/favicon.ico'));",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/static', express.static(__dirname + '/../public', {",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "    maxAge: 86400000",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "}));",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "process.on('uncaughtException', err => {",
                        "lineNumber": 38,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.error(err.message + '\\n' + err.stack);",
                        "lineNumber": 39,
                        "lineChange": "removed"
                      },
                      {
                        "line": "});",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "process.on('unhandledRejection', (reason, p) => {",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.error(\"Unhandled Rejection at: Promise \", p, \" reason: \", reason);",
                        "lineNumber": 42,
                        "lineChange": "removed"
                      },
                      {
                        "line": "});",
                        "lineNumber": 43,
                        "lineChange": "removed"
                      },
                      {
                        "line": "process.on('rejectionHandled', (reason, p) => {",
                        "lineNumber": 44,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.warn(\"rejectionHandled at: Promise \", p, \" reason: \", reason);",
                        "lineNumber": 45,
                        "lineChange": "removed"
                      },
                      {
                        "line": "});",
                        "lineNumber": 46,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if(process.env.NODE_ENV !== 'production'){",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let webpack = require('webpack');",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let config = require('../create-webpack.config')(true);",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let webpackDevMiddleware = require('webpack-dev-middleware');",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let webpackHotMiddleware = require('webpack-hot-middleware');",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let compiler = webpack(config);",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(webpackDevMiddleware(compiler, { noInfo: true, publicPath: config.output.publicPath }));",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(webpackHotMiddleware(compiler));",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use('/', allowCrossDomain);",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(csurf());",
                        "lineNumber": 51,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(function (req, res, next) {",
                        "lineNumber": 52,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.locals.csrftoken = req.session._csrf;",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "    next();",
                        "lineNumber": 54,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 55,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OpenSprites/OpenSprites-next/commit/0ff4f1bc633496f7d5abc5f9bdf2a5cce43b080e?diff=split#diff-d3f9f1ac91aa1bf0f85894eb43eb424f26c61fd0e44eeb8c0787f48a0ba511ecR36",
                    "lines": [
                      {
                        "line": "const csrf = require('csurf')",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "const session = require('express-session')",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "const sessionStore = require('session-file-store')(session)",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "const exprhbs = require('express-handlebars')",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "const cheerio = require('cheerio')",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "const request = require('request-promise')",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "const marked = require('marked')",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "const base32 = require('base32')",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "const uniqid = require('uniqid').process",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "const shortid = require('shortid').generate",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "const rot = require('rot')",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "const bcrypt = require('bcrypt-as-promised')",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "const tada = '🎉'",
                        "lineNumber": 50,
                        "lineChange": "added"
                      },
                      {
                        "line": "const db = require('../db')",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "/////////////////////////////////////////////////////",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "const badWords = '\\\\o(shtyl|(\\\\j*?)shpx(\\\\j*?)|s(h|i|\\\\*)?p?x(vat?)?|(\\\\j*?)fu(v|1|y)g(\\\\j*?)|pe(n|@|\\\\*)c(cre|crq|l)?|(onq|qhzo|wnpx)?(n|@)ff(u(b|0)yr|jvcr)?|(onq|qhzo|wnpx)?(n|@)efr(u(b|0)yr|jvcr)?|onfgneq|o(v|1|y|\\\\*)?g?pu(r?f)?|phag|phz|(tbq?)?qnz(a|z)(vg)?|qbhpur(\\\\j*?)|(arj)?snt(tbg|tng)?|sevt(tra|tva|tvat)?|bzst|cvff(\\\\j*?)|cbea|encr|ergneq|frk|f r k|fung|fyhg|gvg|ju(b|0)er(\\\\j*?)|jg(s|su|u))(f|rq)?\\\\o' // rot13",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "const signupProjectId = 115307769 // null to disable check",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "const requireEmailConfirmedToShare = false",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "/////////////////////////////////////////////////////////",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "const badWordsRegex = new RegExp(rot(badWords, -13), 'gi')",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "const hasBadWords = text => text.match(badWordsRegex)",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "const replaceBadWords = (text, w='⋆⋆⋆⋆') => text.replace(badWordsRegex, w)",
                        "lineNumber": 63,
                        "lineChange": "none"
                      },
                      {
                        "line": "/////////////////////////////////////////////////////////",
                        "lineNumber": 65,
                        "lineChange": "none"
                      },
                      {
                        "line": "let app = express()",
                        "lineNumber": 67,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.engine('hbs', exprhbs.create({",
                        "lineNumber": 69,
                        "lineChange": "none"
                      },
                      {
                        "line": "  defaultLayout: 'main',",
                        "lineNumber": 70,
                        "lineChange": "none"
                      },
                      {
                        "line": "  extname: '.hbs',",
                        "lineNumber": 71,
                        "lineChange": "none"
                      },
                      {
                        "line": "  layoutsDir: 'public/views/layouts/',",
                        "lineNumber": 72,
                        "lineChange": "none"
                      },
                      {
                        "line": "  partialsDir: 'public/views/partials/',",
                        "lineNumber": 73,
                        "lineChange": "none"
                      },
                      {
                        "line": "  helpers: {",
                        "lineNumber": 75,
                        "lineChange": "none"
                      },
                      {
                        "line": "    md: raw => marked(raw, { sanitize: true }),",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "    json: raw => JSON.stringify(raw),",
                        "lineNumber": 77,
                        "lineChange": "none"
                      },
                      {
                        "line": "    timeago: raw => `<span class='timeago'>${raw}</span>`",
                        "lineNumber": 78,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "}).engine)",
                        "lineNumber": 80,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', 'public/views')",
                        "lineNumber": 82,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'hbs')",
                        "lineNumber": 83,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('trust proxy', 1)",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('json spaces', 2)",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "  secret: 'thisandagainplsexplain',",
                        "lineNumber": 86,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  secret: process.env.session_secret,",
                        "lineNumber": 89,
                        "lineChange": "added"
                      },
                      {
                        "line": "  cookie: { secure: false }, // enable if running on HTTPS",
                        "lineNumber": 90,
                        "lineChange": "none"
                      },
                      {
                        "line": "  resave: true,",
                        "lineNumber": 91,
                        "lineChange": "none"
                      },
                      {
                        "line": "  saveUninitialized: true,",
                        "lineNumber": 92,
                        "lineChange": "none"
                      },
                      {
                        "line": "  store: new sessionStore({",
                        "lineNumber": 93,
                        "lineChange": "none"
                      },
                      {
                        "line": "    path: 'db/session',",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "    logFn: ()=>{}",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "}))",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "const upload = multer({",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "  storage: multer.diskStorage({",
                        "lineNumber": 100,
                        "lineChange": "none"
                      },
                      {
                        "line": "    destination: (req, file, cb) => cb(null, path.join(__dirname, '../../', 'db/resource')),",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "    filename: (req, file, cb) => {",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if(!req.session.user) cb(null, false)",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "      let filename = base32.encode(",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "        shortid()",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "      )",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "      cb(null, filename)",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json())",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: true }))",
                        "lineNumber": 112,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.use(function(req, res, next) {",
                        "lineNumber": 114,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  req.session.udata = db.user.get(req.session.user || '')",
                        "lineNumber": 115,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if(req.session.user && !db.user.exists(req.session.user)) {",
                        "lineNumber": 117,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    delete req.session.user",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 119,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  next()",
                        "lineNumber": 121,
                        "lineChange": "removed"
                      },
                      {
                        "line": "})",
                        "lineNumber": 122,
                        "lineChange": "removed"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: false }))",
                        "lineNumber": 115,
                        "lineChange": "added"
                      },
                      {
                        "line": "function mustSignIn(req, res, next) {",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(req.session.user) {",
                        "lineNumber": 125,
                        "lineChange": "none"
                      },
                      {
                        "line": "    next()",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "    req.session.r = req.originalUrl",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.redirect('/signin')",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(csrf({",
                        "lineNumber": 126,
                        "lineChange": "added"
                      },
                      {
                        "line": "  value: req => req.body.csrf",
                        "lineNumber": 127,
                        "lineChange": "added"
                      },
                      {
                        "line": "}))",
                        "lineNumber": 128,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(function(err, req, res, next) {",
                        "lineNumber": 130,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if(err.code !== 'EBADCSRFTOKEN') return next(err)",
                        "lineNumber": 131,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.status(403).render('403', {",
                        "lineNumber": 133,
                        "lineChange": "added"
                      },
                      {
                        "line": "    user: req.session.user",
                        "lineNumber": 134,
                        "lineChange": "added"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 135,
                        "lineChange": "added"
                      },
                      {
                        "line": "})",
                        "lineNumber": 136,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/pietrzakadrian/bank/commit/c37779b4b85c031001c5d84aa259adface1d6602?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L18",
                    "lines": [
                      {
                        "line": "const app = express();",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "const server = require('http').Server(app, {",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  transports: ['websocket', 'polling'],",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "const io = require('socket.io')(server, { pingTimeout: 60000 });",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "const cron = require('node-cron');",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "const swaggerUi = require('swagger-ui-express');",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "const swaggerDocument = require('./utils/swagger.json');",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "const db = require('./config/db.config');",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "const env = require('./config/env.config');",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "const Op = db.Sequelize.Op;",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "const cookieParser = require('cookie-parser');",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "const csrf = require('csurf');",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(bodyParser.urlencoded({ extended: true }));",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser.json());",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "  bodyParser.json({",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    limit: '2000kb',",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }),",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": ");",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.disable('x-powered-by');",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cors());",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cookieParser());",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use((req, res, next) => {",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.header('Access-Control-Allow-Origin', '*');",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.header(",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'Access-Control-Allow-Headers',",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "    'Origin, X-Requested-With, Content-Type, Accept, Authorization',",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "  );",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (req.method === 'OPTIONS') {",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.header('Access-Control-Allow-Methods', 'PUT, POST, PATCH, DELETE, GET');",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return res.status(200).json({});",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "  next();",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(morgan('dev'));",
                        "lineNumber": 57,
                        "lineChange": "added"
                      },
                      {
                        "line": "require('./routes/currency.route.js')(app);",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(csrf({ cookie: true }));",
                        "lineNumber": 60,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test without express",
                  "/server tests ()",
                  "Refactor error middleware for testing and extension"
                ],
                "precision": "very-high",
                "repoDatasetSize": 701,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedPasswords/test",
              "name": "NoHardcodedPasswords/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/csprance/MisRCON/commit/72964f54abde81f9f40d88ebe16b583ebfec8904?diff=split#diff-3733a6fa6d50cc4d78c76e60f128404eL11",
                    "lines": [
                      {
                        "line": "ip: 'loading',",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "ip: '',",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "port: 0,",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "password: 'THisIsCool324HashMan',",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: '',",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "active: true,",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "selfHosted: false,",
                        "lineNumber": 12,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bradwestfall/house-rules/commit/f96c3465d59030b2d853574e01f58d2d8fef4556?diff=split#diff-c90d23fc26d6eeec89e1d77807b6bbbbL21",
                    "lines": [
                      {
                        "line": " ",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "let errors = loginFormSchema.validate({",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  email: 'test@test.com',",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: 'somepassword'",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: undefined",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "})",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Madmous/madClones/commit/31843ab238a5d3d988c360bc3b01b719cc588c9f?diff=split#diff-374c156c3cd1b9952bee7d8064382f69L26",
                    "lines": [
                      {
                        "line": "  email: 'testEmail@email.com',",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  email: 'test@email.com',",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "  application: 'test application',",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  password: 'testPassword'",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: 'test'",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 26,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Fixing type errors in tests",
                  "This commit disables the password change tests.",
                  "Mock api() tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 522,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "javascript/DOMXSS",
              "name": "DOMXSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jbt/markdown-editor/commit/4c02744b8a51de4a23002a7064e3d5a9a712f78c?diff=split#diff-0eb547304658805aad788d320f10bf1f292797b5e6d745a3bf617584da017051L187",
                    "lines": [
                      {
                        "line": "  document.getElementById('out').innerHTML = marked(val);",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "var editor = CodeMirror.fromTextArea(document.getElementById('code'), {",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "  mode: 'gfm',",
                        "lineNumber": 190,
                        "lineChange": "none"
                      },
                      {
                        "line": "  lineNumbers: true,",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "  matchBrackets: true,",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "  lineWrapping: true,",
                        "lineNumber": 193,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theme: 'default',",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "  onChange: update",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 196,
                        "lineChange": "none"
                      },
                      {
                        "line": "document.addEventListener('drop', function(e){",
                        "lineNumber": 198,
                        "lineChange": "none"
                      },
                      {
                        "line": "  e.preventDefault();",
                        "lineNumber": 199,
                        "lineChange": "none"
                      },
                      {
                        "line": "  e.stopPropagation();",
                        "lineNumber": 200,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var theFile = e.dataTransfer.files[0];",
                        "lineNumber": 202,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var theReader = new FileReader();",
                        "lineNumber": 203,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theReader.onload = function(e){",
                        "lineNumber": 204,
                        "lineChange": "none"
                      },
                      {
                        "line": "    editor.setValue(e.target.result);",
                        "lineNumber": 205,
                        "lineChange": "none"
                      },
                      {
                        "line": "  };",
                        "lineNumber": 206,
                        "lineChange": "none"
                      },
                      {
                        "line": "  theReader.readAsText(theFile);",
                        "lineNumber": 208,
                        "lineChange": "none"
                      },
                      {
                        "line": "}, false);",
                        "lineNumber": 209,
                        "lineChange": "none"
                      },
                      {
                        "line": "function save(){",
                        "lineNumber": 211,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var code = editor.getValue();",
                        "lineNumber": 212,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var blob = new Blob([code], { type: 'text/plain' });",
                        "lineNumber": 213,
                        "lineChange": "none"
                      },
                      {
                        "line": "  saveBlob(blob);",
                        "lineNumber": 214,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 215,
                        "lineChange": "none"
                      },
                      {
                        "line": "function saveBlob(blob){",
                        "lineNumber": 217,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var name = \"untitled.md\";",
                        "lineNumber": 218,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(window.saveAs){",
                        "lineNumber": 219,
                        "lineChange": "none"
                      },
                      {
                        "line": "    window.saveAs(blob, name);",
                        "lineNumber": 220,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }else if(navigator.saveBlob){",
                        "lineNumber": 221,
                        "lineChange": "none"
                      },
                      {
                        "line": "    navigator.saveBlob(blob, name);",
                        "lineNumber": 222,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }else{",
                        "lineNumber": 223,
                        "lineChange": "none"
                      },
                      {
                        "line": "    url = URL.createObjectURL(blob);",
                        "lineNumber": 224,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var link = document.createElement(\"a\");",
                        "lineNumber": 225,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.setAttribute(\"href\",url);",
                        "lineNumber": 226,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.setAttribute(\"download\",name);",
                        "lineNumber": 227,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var event = document.createEvent('MouseEvents');",
                        "lineNumber": 228,
                        "lineChange": "none"
                      },
                      {
                        "line": "    event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);",
                        "lineNumber": 229,
                        "lineChange": "none"
                      },
                      {
                        "line": "    link.dispatchEvent(event);",
                        "lineNumber": 230,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 231,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 232,
                        "lineChange": "none"
                      },
                      {
                        "line": "document.addEventListener('keydown', function(e){",
                        "lineNumber": 234,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(e.keyCode == 83 && (e.ctrlKey || e.metaKey)){",
                        "lineNumber": 235,
                        "lineChange": "none"
                      },
                      {
                        "line": "    e.preventDefault();",
                        "lineNumber": 236,
                        "lineChange": "none"
                      },
                      {
                        "line": "    save();",
                        "lineNumber": 237,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return false;",
                        "lineNumber": 238,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 239,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "var hashto;",
                        "lineNumber": 242,
                        "lineChange": "none"
                      },
                      {
                        "line": "function updateHash(){",
                        "lineNumber": 244,
                        "lineChange": "none"
                      },
                      {
                        "line": "  window.location.hash = btoa(RawDeflate.deflate(editor.getValue()));",
                        "lineNumber": 245,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  window.location.hash = btoa(RawDeflate.deflate(unescape(encodeURIComponent(editor.getValue()))))",
                        "lineNumber": 245,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 246,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(window.location.hash){",
                        "lineNumber": 248,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var h = window.location.hash.replace(/^#/, '');",
                        "lineNumber": 249,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if(h.slice(0,5) == 'view:'){",
                        "lineNumber": 250,
                        "lineChange": "none"
                      },
                      {
                        "line": "    setOutput(RawDeflate.inflate(atob(h.slice(5))));",
                        "lineNumber": 251,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    setOutput(decodeURIComponent(escape(RawDeflate.inflate(atob(h.slice(5))))));",
                        "lineNumber": 251,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RasPlex/OpenPHT/commit/ea03c88ab96c2607d7fc7bdb04bed16a2c14afa5?diff=split#diff-cbc600141d5846348060616895d0adbb51a9720d9504a4d7d33cd5eb65e44d4bL57",
                    "lines": [
                      {
                        "line": "document.write('<img src=\"' + thumbnail + '\" class=\"cover\"></img>');",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var imgSrc = item[\"thumbnail\"] ? ('vfs/' + escape(item[\"thumbnail\"])) : \"images/DefaultVideo.png\";",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "document.write('<img src=\"' + imgSrc + '\" class=\"cover\"></img>');",
                        "lineNumber": 54,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RasPlex/OpenPHT/commit/ea03c88ab96c2607d7fc7bdb04bed16a2c14afa5?diff=split#diff-07d3f208648c3e9987149a3900a8c9f269a0edd8ad11f1f0be50ad475bb36320L60",
                    "lines": [
                      {
                        "line": "if (array[activeItem][\"thumbnail\"])",
                        "lineNumber": 59,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  document.write('<img src=\"thumb/' + array[activeItem][\"thumbnail\"] + '.jpg\"></img>\"');",
                        "lineNumber": 60,
                        "lineChange": "removed"
                      },
                      {
                        "line": " else",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "   document.write('<img src=\"images/DefaultAlbumCover.png\"></img>');",
                        "lineNumber": 62,
                        "lineChange": "removed"
                      },
                      {
                        "line": " var imgSrc = array[activeItem][\"thumbnail\"] ? ('vfs/' + escape(array[activeItem][\"thumbnail\"])) : \"images/DefaultAlbumCover.png\";",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": " document.write('<img src=\"' + imgSrc + '\"></img>');",
                        "lineNumber": 60,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Add unit test.",
                  "e3db0cd CHANGES.md\n84d1acf Add tests.",
                  "Update and clean up the tests by using the iframe's load event."
                ],
                "precision": "very-high",
                "repoDatasetSize": 1490,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedPasswords",
              "name": "NoHardcodedPasswords",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n### Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/csprance/MisRCON/commit/72964f54abde81f9f40d88ebe16b583ebfec8904?diff=split#diff-3733a6fa6d50cc4d78c76e60f128404eL11",
                    "lines": [
                      {
                        "line": "ip: 'loading',",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "ip: '',",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "port: 0,",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "password: 'THisIsCool324HashMan',",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: '',",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "active: true,",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "selfHosted: false,",
                        "lineNumber": 12,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bradwestfall/house-rules/commit/f96c3465d59030b2d853574e01f58d2d8fef4556?diff=split#diff-c90d23fc26d6eeec89e1d77807b6bbbbL21",
                    "lines": [
                      {
                        "line": " ",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "let errors = loginFormSchema.validate({",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  email: 'test@test.com',",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: 'somepassword'",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: undefined",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "})",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Madmous/madClones/commit/31843ab238a5d3d988c360bc3b01b719cc588c9f?diff=split#diff-374c156c3cd1b9952bee7d8064382f69L26",
                    "lines": [
                      {
                        "line": "  email: 'testEmail@email.com',",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  email: 'test@email.com',",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "  application: 'test application',",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  password: 'testPassword'",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  password: 'test'",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 26,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Fixing type errors in tests",
                  "This commit disables the password change tests.",
                  "Mock api() tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 522,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "javascript/ZipSlip",
              "name": "ZipSlip",
              "shortDescription": {
                "text": "Arbitrary File Write via Archive Extraction (Zip Slip)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nZip Slip is a form of directory traversal that can be exploited by extracting files from an archive. The premise of the directory traversal vulnerability is that an attacker can gain access to parts of the file system outside of the target folder in which they should reside. The attacker can then overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim’s machine. The vulnerability can also cause damage by overwriting configuration files or other sensitive resources, and can be exploited on both client (user) machines and servers.\n\n## Example\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/TheDiveO/TW5FontAwesome/commit/34061b38a7d5a3b682bb4340c890207910d286ff?diff=split#diff-64acd67a4b548b26b47e325bec8a5f15L52",
                    "lines": [
                      {
                        "line": "self.logger.log(\"updating plugin from local Font Awesome zip package...\");",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "self.logger.log(\"opening zip package:\", self.params[0]);",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "var fazip = new zip(self.params[0]);",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Autodetect the Font Awesome version...",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "var faroot = fazip.getEntries()[0].entryName.split(\"/\")[0];",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!faroot.startsWith(\"fontawesome-\")) {",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return \"invalid Font Awesome zip package: missing or invalid path root \" + faroot;",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "var match = /^fontawesome-.*-(\\d+\\.\\d+\\.\\d+)$/.exec(faroot);",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (match === null) {",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return \"cannot autodetect Font Awesome version from path root \" + faroot;",
                        "lineNumber": 60,
                        "lineChange": "none"
                      },
                      {
                        "line": "], function(font) {",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "  self.logger.log(\"extracting\", font.fontfile);",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var woffname = faroot + \"/web-fonts-with-css/webfonts/\" + font.fontfile + \".woff\"",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var woff = fazip.readFile(woffname);",
                        "lineNumber": 93,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (woff === null) {",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  var woffb64 = fazip.readAsText(woffname, \"base64\");",
                        "lineNumber": 99,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (woffb64 === null) {",
                        "lineNumber": 100,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return \"missing WOFF web font file \" + woffname;",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "   }",
                        "lineNumber": 102,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qddjs/qdd/commit/725c8390612f6825619dfd93c8802d5d72e20381?diff=split#diff-afe5f6abf23e157792a2ecc031ede915L14",
                    "lines": [
                      {
                        "line": "debug(() => `untar ${cacheDir} ${destDir}`);",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "const gunzip = zlib.createGunzip();",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const gunzip = new zlib.Gunzip();",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "const extractStream = tarStream.extract();",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "extractStream.on('entry', (header, stream, next) => {",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (header.type !== 'file') {",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    stream.resume();",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    stream.on('end', next);",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return;",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const name = header.name.slice(header.name.indexOf('/'));",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!cacheDir) {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "    const filename = destDir + name;",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    mkdirp(dirname(filename), (err) => {",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if (err) {",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return next(err);",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "      }",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "      const writeStream = fs.createWriteStream(filename);",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      const writeStream = new fs.WriteStream(filename);",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "      writeStream.on('close', next);",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "      stream.pipe(writeStream);",
                        "lineNumber": 29,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/dominickp/antfarm/commit/c0cbac2293f8a30441549e85a36f0a1e43bf74da?diff=split#diff-4f221eb51265db08112c2924e225fba2L160",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 157,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Open the zip in JSZip",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "JSZip.loadAsync(data).then((zip) => {",
                        "lineNumber": 159,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // Restore job ticket and create job",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "    zip.folder(\"_ticket\").forEach((relativePath, file) => {",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "        zip.file(`_ticket${path.sep}${relativePath}`).async(\"string\")",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "            .then((content) => {",
                        "lineNumber": 163,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        .then((content) => {",
                        "lineNumber": 163,
                        "lineChange": "added"
                      },
                      {
                        "line": "let tempPath = tmpobj.name;",
                        "lineNumber": 169,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    if (zip.folder(\"_asset\").length > 1) {",
                        "lineNumber": 171,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        pj.e.log(2, `Restored job did not contain any file assets.`, pj, [job]);",
                        "lineNumber": 172,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    }",
                        "lineNumber": 173,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                    zip.folder(\"_asset\").forEach((relativePath, file) => {",
                        "lineNumber": 175,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                        // console.log(\"iterating over\", relativePath);",
                        "lineNumber": 176,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// Check for valid pack format",
                        "lineNumber": 184,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (zip.folder(\"_asset\").length > 1) {",
                        "lineNumber": 185,
                        "lineChange": "added"
                      },
                      {
                        "line": "    pj.e.log(2, `Restored job did not contain any file assets.`, pj, [job]);",
                        "lineNumber": 186,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 187,
                        "lineChange": "added"
                      },
                      {
                        "line": "                        zip.file(`_asset${path.sep}${relativePath}`).async(\"nodebuffer\")",
                        "lineNumber": 178,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                            .then((content) => {",
                        "lineNumber": 179,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                let filePath = tempPath + path.sep + relativePath;",
                        "lineNumber": 180,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                fs.writeFileSync(filePath, content);",
                        "lineNumber": 181,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                if (job.isFolder()) {",
                        "lineNumber": 182,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    console.log(\"gotta add file to job for folder\");",
                        "lineNumber": 183,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                } else {",
                        "lineNumber": 184,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    job.setPath(filePath);",
                        "lineNumber": 185,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                    job.rename(relativePath);",
                        "lineNumber": 186,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                                }",
                        "lineNumber": 187,
                        "lineChange": "removed"
                      },
                      {
                        "line": "pj.extractFiles(zip, false, \"_asset/\", (filePath, folderName) => {",
                        "lineNumber": 191,
                        "lineChange": "added"
                      },
                      {
                        "line": "    job.setPath(filePath);",
                        "lineNumber": 192,
                        "lineChange": "added"
                      },
                      {
                        "line": "    job.rename(folderName);",
                        "lineNumber": 193,
                        "lineChange": "added"
                      },
                      {
                        "line": "    callback(job);",
                        "lineNumber": 194,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 195,
                        "lineChange": "added"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 233,
                        "lineChange": "added"
                      },
                      {
                        "line": "    console.log(\"EXTRACTING SINGLE\");",
                        "lineNumber": 234,
                        "lineChange": "added"
                      },
                      {
                        "line": "    zip.file(newRelPath).async(\"nodebuffer\")",
                        "lineNumber": 235,
                        "lineChange": "added"
                      },
                      {
                        "line": "        .then((content) => {",
                        "lineNumber": 236,
                        "lineChange": "added"
                      },
                      {
                        "line": "            fileNumber++;",
                        "lineNumber": 237,
                        "lineChange": "added"
                      },
                      {
                        "line": "            let filePath = tempPath + path.sep + relativePath;",
                        "lineNumber": 238,
                        "lineChange": "added"
                      },
                      {
                        "line": "            fs.writeFileSync(filePath, content);",
                        "lineNumber": 239,
                        "lineChange": "added"
                      },
                      {
                        "line": "            callback(filePath, relativePath);",
                        "lineNumber": 240,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": "console.log(\"Extracting folder\");",
                        "lineNumber": 247,
                        "lineChange": "added"
                      },
                      {
                        "line": "zip.folder(zipPath).forEach((relativePath, asset) => {",
                        "lineNumber": 249,
                        "lineChange": "added"
                      },
                      {
                        "line": "    let newRelPath = zipPath + relativePath;",
                        "lineNumber": 250,
                        "lineChange": "added"
                      },
                      {
                        "line": "console.log(\"EXTRACTING SINGLE FROM FOLDER\", totalFiles, fileNumber);",
                        "lineNumber": 264,
                        "lineChange": "added"
                      },
                      {
                        "line": "console.log(newRelPath, relativePath, typeof asset.dir);",
                        "lineNumber": 266,
                        "lineChange": "added"
                      },
                      {
                        "line": "fileNumber++;",
                        "lineNumber": 269,
                        "lineChange": "added"
                      },
                      {
                        "line": "let filePath = tempPath + path.sep + relativePath;",
                        "lineNumber": 270,
                        "lineChange": "added"
                      },
                      {
                        "line": "fs.writeFileSync(filePath, content);",
                        "lineNumber": 271,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (totalFiles === fileNumber) {",
                        "lineNumber": 273,
                        "lineChange": "added"
                      },
                      {
                        "line": "    console.log(\"relativePath.split(path.sep)\", relativePath.split(path.sep));",
                        "lineNumber": 274,
                        "lineChange": "added"
                      },
                      {
                        "line": "    callback(tempPath, newRelPath.split(path.sep)[1]);",
                        "lineNumber": 275,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 276,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Use yauzl instead of unzip module.",
                  "- Trying to import zip file kills server"
                ],
                "precision": "very-high",
                "repoDatasetSize": 17,
                "cwe": [
                  "CWE-22"
                ]
              }
            },
            {
              "id": "javascript/NoSqli",
              "name": "NoSqli",
              "shortDescription": {
                "text": "NoSQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an NoSQL injection attack, the user can submit an NoSQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/JasonEtco/flintcms/commit/4ae34238ce39fde00dfa15082397541758c07af1?diff=split#diff-9de779015fec61fc28e3fc1b3a62d1fdL8",
                    "lines": [
                      {
                        "line": "const sendEmail = require('../../utils/emails/sendEmail')",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "const User = mongoose.model('User')",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const UserGroup = mongoose.model('UserGroup')",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "const router = express.Router()",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 101,
                        "lineChange": "none"
                      },
                      {
                        "line": "router.get('/verify', async (req, res) => {",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const token = req.query.t",
                        "lineNumber": 104,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const token = req.query.t.toString()",
                        "lineNumber": 104,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const user = await User.findOne({ token })",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!user) {",
                        "lineNumber": 107,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bkimminich/juice-shop/commit/5b9e4fe01a989e38be3bc7f52718c0c9d2dc2d6f?diff=split#diff-3ee9e2e81d2a5119de6e749e4d7d088aL7",
                    "lines": [
                      {
                        "line": "module.exports = function trackOrder () {",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return (req, res) => {",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (utils.notSolved(challenges.reflectedXssChallenge) && utils.contains(req.params.id, '<script>alert(\"XSS\")</script>')) {",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "      utils.solve(challenges.reflectedXssChallenge)",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    db.orders.find({ orderId: req.params.id }).then(order => {",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    req.params.id = decodeURIComponent(req.params.id)",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "    db.orders.find({ $where: \"this.orderId === '\" + req.params.id + \"'\" }).then(order => {",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "      const result = utils.queryResultToJson(order)",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "      if (utils.notSolved(challenges.noSqlInjectionChallenge2) && result.data.length > 1) {",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (result.data[0] === undefined) {",
                        "lineNumber": 16,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/reviewninja/review.ninja/commit/17361111027001a330f930557cd3ff6ab04741d4?diff=split#diff-1e55193185e421a5669bbadca9231cc4L8",
                    "lines": [
                      {
                        "line": "var webhook = require('../services/webhook');",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "// models",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "var User = require('mongoose').model('User');",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "var contains = function(events) {",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "},",
                        "lineNumber": 74,
                        "lineChange": "none"
                      },
                      {
                        "line": "create: function(req, done) {",
                        "lineNumber": 76,
                        "lineChange": "none"
                      },
                      {
                        "line": "    User.findOne({uuid: req.args.user_uuid}, function(err, user) {",
                        "lineNumber": 77,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    User.findOne({uuid: req.user.uuid}, function(err, user) {",
                        "lineNumber": 77,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if(err || !user) {",
                        "lineNumber": 79,
                        "lineChange": "none"
                      },
                      {
                        "line": "fun: 'createHook',",
                        "lineNumber": 85,
                        "lineChange": "none"
                      },
                      {
                        "line": "arg: {",
                        "lineNumber": 86,
                        "lineChange": "none"
                      },
                      {
                        "line": "    user: req.args.user,",
                        "lineNumber": 87,
                        "lineChange": "none"
                      },
                      {
                        "line": "    repo: req.args.repo,",
                        "lineNumber": 88,
                        "lineChange": "none"
                      },
                      {
                        "line": "    name: 'web',",
                        "lineNumber": 89,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* cleanup for controllers",
                  "refactored mongoose schemas into separate files",
                  "remove mongodb support as m3u8 require authentication"
                ],
                "precision": "very-high",
                "repoDatasetSize": 69,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n### Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/microsoft/0xDeCA10B/commit/e0e0b6dcbf868757f86de1c45aa4a21eab2403cb?diff=split#diff-d849467134997233c75d810c421a5060765c455204773b1e6cd1d8e38799f734L103",
                    "lines": [
                      {
                        "line": "const results = db.exec(`SELECT text FROM data WHERE transaction_hash == '${req.params.transactionHash}'`);",
                        "lineNumber": 102,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (results[0]) {",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  result = null;",
                        "lineNumber": 104,
                        "lineChange": "removed"
                      },
                      {
                        "line": "}",
                        "lineNumber": 105,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const originalData = results[0].values[0][0];",
                        "lineNumber": 106,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const getTextStmt = db.prepare('SELECT text FROM data WHERE transaction_hash == $transactionHash LIMIT 1;');",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const textResult = getTextStmt.getAsObject({ $transactionHash: req.params.transactionHash });",
                        "lineNumber": 104,
                        "lineChange": "added"
                      },
                      {
                        "line": "  getTextStmt.free();",
                        "lineNumber": 105,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const originalData = textResult.text;",
                        "lineNumber": 106,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/cod3rcursos/curso-react-native/commit/e58db9a8c8e1098ab8a7382735846eaf313ec2b8?diff=split#diff-6745e51d4329a3591aa2dbc34b7493222a11fe7bc3ed5398e25a788117add014L12",
                    "lines": [
                      {
                        "line": ".where({ email: req.body.email })",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": ".whereRaw(\"LOWER(email) = LOWER(?)\", req.body.email)",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/CGamesPlay/chronicler/commit/3a315db0966cb8d639dfb2ae9181b61d1d7405ea?diff=split#diff-e0173d6c9e1ed543348d72bb9cfd7b32d21cded32778bf0a7e070a58575b36bbL126",
                    "lines": [
                      {
                        "line": "return this.db",
                        "lineNumber": 125,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  .get(",
                        "lineNumber": 126,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SQL`",
                        "lineNumber": 127,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    SELECT url, method, requests.headers AS requestHeaders, requests.body AS requestBody,",
                        "lineNumber": 128,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    statusCode, responses.headers as responseHeaders, responses.body AS responseBody",
                        "lineNumber": 129,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    FROM requests",
                        "lineNumber": 130,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    LEFT JOIN responses",
                        "lineNumber": 131,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ON responses.requestId = requests.id",
                        "lineNumber": 132,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    WHERE url = ${url}",
                        "lineNumber": 133,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    AND method = ${method}",
                        "lineNumber": 134,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    AND statusCode != 304",
                        "lineNumber": 135,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    ORDER BY requests.id DESC",
                        "lineNumber": 136,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    LIMIT 1`,",
                        "lineNumber": 137,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  )",
                        "lineNumber": 138,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  .then(raw => {",
                        "lineNumber": 139,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (!raw || raw.statusCode == null) return null;",
                        "lineNumber": 140,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const result = { ...raw };",
                        "lineNumber": 141,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    result.requestHeaders = JSON.parse(raw.requestHeaders);",
                        "lineNumber": 142,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (raw.responseHeaders) {",
                        "lineNumber": 143,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      result.responseHeaders = JSON.parse(raw.responseHeaders);",
                        "lineNumber": 144,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }",
                        "lineNumber": 145,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    return result;",
                        "lineNumber": 146,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return Request.query(this.db)",
                        "lineNumber": 146,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .findOne({ url, method })",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .orderBy(\"id\", \"desc\")",
                        "lineNumber": 148,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .joinEager(\"response\")",
                        "lineNumber": 149,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .modifyEager(\"response\", b => {",
                        "lineNumber": 150,
                        "lineChange": "added"
                      },
                      {
                        "line": "    b.whereNot({ statusCode: 304 });",
                        "lineNumber": 151,
                        "lineChange": "added"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 152,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .then(request => {",
                        "lineNumber": 153,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (!request) return null;",
                        "lineNumber": 154,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return {",
                        "lineNumber": 155,
                        "lineChange": "added"
                      },
                      {
                        "line": "      url: request.url,",
                        "lineNumber": 156,
                        "lineChange": "added"
                      },
                      {
                        "line": "      method: request.method,",
                        "lineNumber": 157,
                        "lineChange": "added"
                      },
                      {
                        "line": "      requestHeaders: request.headers,",
                        "lineNumber": 158,
                        "lineChange": "added"
                      },
                      {
                        "line": "      requestBody: request.body,",
                        "lineNumber": 159,
                        "lineChange": "added"
                      },
                      {
                        "line": "      statusCode: request.response.statusCode,",
                        "lineNumber": 160,
                        "lineChange": "added"
                      },
                      {
                        "line": "      responseHeaders: request.response.headers,",
                        "lineNumber": 161,
                        "lineChange": "added"
                      },
                      {
                        "line": "      responseBody: request.response.body,",
                        "lineNumber": 162,
                        "lineChange": "added"
                      },
                      {
                        "line": "    };",
                        "lineNumber": 163,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- Previous default ipfs config is only applied when `test` options equals `true`",
                  "Fixing bugs and unit tests.",
                  "updated search api"
                ],
                "precision": "very-high",
                "repoDatasetSize": 213,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/basicallydan/interfake/commit/a98f64b6996712c5b3717ee13a1faa3c5c15be6f?diff=split#diff-a4c65ede64197e1a112899a68bf994485b889c4b143198bac4af53425b38406fR48",
                    "lines": [
                      {
                        "line": "res.setHeader('Content-Type', 'application/json');",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.send(specifiedResponse.code, specifiedResponse.body);",
                        "lineNumber": 50,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/iverenshaguy/book-a-meal/commit/2cfce3689ed825302f4cf597426f0a55108c939c?diff=split#diff-62c0bdb7e35cfd687116c9fae4d4583cf6cab2b7687749f7399054f7bcdbf5fcL42",
                    "lines": [
                      {
                        "line": "return res.status(201).send(meal);",
                        "lineNumber": 41,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return res.status(201).json(meal);",
                        "lineNumber": 41,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/shindesharad71/Anstagram/commit/ac8c703366e073f9fa9ce4b666486a6ba68d23e8?diff=split#diff-63f3a8f1c953bef55c53ac527fa94457a22c8357f265af435605926c66176d97L24",
                    "lines": [
                      {
                        "line": "res.send(req.files);",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.send({ files: req.files, body: req.body });",
                        "lineNumber": 23,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* fixing API tests",
                  "server tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 1116,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "javascript/reDOS",
              "name": "reDOS",
              "shortDescription": {
                "text": "Regular Expression Denial of Service (ReDoS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its original and legitimate users. There are many types of DoS attacks, ranging from trying to clog the network pipes to the system by generating a large volume of traffic from many machines (a Distributed Denial of Service - DDoS - attack) to sending crafted requests that cause a system to crash or take a disproportional amount of time to process.\n\nThe Regular expression Denial of Service (ReDoS) is a type of Denial of Service attack. Regular expressions are incredibly powerful, but they aren't very intuitive and can ultimately end up making it easy for attackers to take your site down.\n\nLet's take the following regular expression as an example:\n```js\nregex = /A(B|C+)+D/\n```\n\nThis regular expression accomplishes the following:\n- `A` The string must start with the letter 'A'\n- `(B|C+)+` The string must then follow the letter A with either the letter 'B' or some number of occurrences of the letter 'C' (the `+` matches one or more times). The `+` at the end of this section states that we can look for one or more matches of this section.\n- `D` Finally, we ensure this section of the string ends with a 'D'\n\nThe expression would match inputs such as `ABBD`, `ABCCCCD`, `ABCBCCCD` and `ACCCCCD`\n\nIt most cases, it doesn't take very long for a regex engine to find a match:\n\n```bash\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCD\")'\n0.04s user 0.01s system 95% cpu 0.052 total\n\n$ time node -e '/A(B|C+)+D/.test(\"ACCCCCCCCCCCCCCCCCCCCCCCCCCCCX\")'\n1.79s user 0.02s system 99% cpu 1.812 total\n```\n\nThe entire process of testing it against a 30 characters long string takes around ~52ms. But when given an invalid string, it takes nearly two seconds to complete the test, over ten times as long as it took to test a valid string. The dramatic difference is due to the way regular expressions get evaluated.\n\nMost Regex engines will work very similarly (with minor differences). The engine will match the first possible way to accept the current character and proceed to the next one. If it then fails to match the next one, it will backtrack and see if there was another way to digest the previous character. If it goes too far down the rabbit hole only to find out the string doesn't match in the end, and if many characters have multiple valid regex paths, the number of backtracking steps can become very large, resulting in what is known as _catastrophic backtracking_.\n\nLet's look at how our expression runs into this problem, using a shorter string: \"ACCCX\". While it seems fairly straightforward, there are still four different ways that the engine could match those three C's:\n1. CCC\n2. CC+C\n3. C+CC\n4. C+C+C.\n\nThe engine has to try each of those combinations to see if any of them potentially match against the expression. When you combine that with the other steps the engine must take, we can use [RegEx 101 debugger](https://regex101.com/debugger) to see the engine has to take a total of 38 steps before it can determine the string doesn't match.\n\nFrom there, the number of steps the engine must use to validate a string just continues to grow.\n\n| String | Number of C's | Number of steps |\n| -------|-------------:| -----:|\n| ACCCX | 3 | 38\n| ACCCCX | 4 | 71\n| ACCCCCX | 5 | 136\n| ACCCCCCCCCCCCCCX | 14 | 65,553\n\n\nBy the time the string includes 14 C's, the engine has to take over 65,000 steps just to see if the string is valid. These extreme situations can cause them to work very slowly (exponentially related to input size, as shown above), allowing an attacker to exploit this and can cause the service to excessively consume CPU, resulting in a Denial of Service.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/SayakMukhopadhyay/elitebgs/commit/43058d899d36c548592d489b5434d2150eff5999?diff=split#diff-4d8a93d3cc127b845f405f2bb1f89f720c9e4cc8ba64341510e1caab51c95a85L95",
                    "lines": [
                      {
                        "line": "$regex: new RegExp(`^${req.query.beginsWith.toLowerCase()}`)",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$regex: new RegExp(`^${_.escapeRegExp(req.query.beginsWith.toLowerCase())}`)",
                        "lineNumber": 94,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SayakMukhopadhyay/elitebgs/commit/e5879c0be815589c372a1a8871dbb44e0eb1659c?diff=split#diff-4d8a93d3cc127b845f405f2bb1f89f720c9e4cc8ba64341510e1caab51c95a85L95",
                    "lines": [
                      {
                        "line": "$regex: new RegExp(`^${req.query.beginsWith.toLowerCase()}`)",
                        "lineNumber": 94,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$regex: new RegExp(`^${_.escapeRegExp(req.query.beginsWith.toLowerCase())}`)",
                        "lineNumber": 94,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/SayakMukhopadhyay/elitebgs/commit/43058d899d36c548592d489b5434d2150eff5999?diff=split#diff-05ec808013e5fe3aa6194e705e156a1719d8e163568ec76540f221ad708e2c44L115",
                    "lines": [
                      {
                        "line": "$regex: new RegExp(`^${req.query.beginsWith.toLowerCase()}`)",
                        "lineNumber": 114,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$regex: new RegExp(`^${_.escapeRegExp(req.query.beginsWith.toLowerCase())}`)",
                        "lineNumber": 115,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* Check if urls are on the same origin, extract method for easier testing",
                  "- delete of simple (no routes or services) apps now works"
                ],
                "precision": "very-high",
                "repoDatasetSize": 305,
                "cwe": [
                  "CWE-400"
                ]
              }
            },
            {
              "id": "javascript/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n### Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/StirFry-js/stirfry/commit/0ec6c45181546a53d9fc7483d6f6a5fdb637b5f4?diff=split#diff-d4bc096f53c231b6d391431724082c63L5",
                    "lines": [
                      {
                        "line": "var StirFry = require('../../stirfry.js');",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "var server  = new StirFry(8080, '0.0.0.0');",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.request((req, res) => res.send(req.url));",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "server.request(/.*/, (req, res) => res.send(req.url));",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wellcometrust/wellcomecollection.org/commit/2399266a906b6573c32a18afacb7ef3a04cf61f6?diff=split#diff-d7a22ad952b0d3fd4f7e83234564f74bL28",
                    "lines": [
                      {
                        "line": "  ctx.throw('Error Message', 500);",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "r.get('/download', (ctx, next) => {",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const uri = ctx.request.query.uri;",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "  ctx.body = request(uri);",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (uri.match('https://iiif.wellcomecollection.org')) {",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ctx.body = request(uri);",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "  } else {",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ctx.throw('Invalid image host', 422);",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 35,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/video-annotation-project/video-annotation-tool/commit/0d3d49e379bf31d231579ed87147f497f1cf6f0a?diff=split#diff-adf121ad5068140f32baa63e505dfd40L32",
                    "lines": [
                      {
                        "line": "getLevel3 = async () => {",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "  let level3 = await axios.get(`/api/reportInfoLevel3?level1=${this.props.level1}&level2=${this.props.level2}&level3=${this.props.level3}&id=${this.props.id}&level1Id=${this.props.level1Id}&admin=${",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  let level3 = await axios.get(`/api/reportInfoLevel3?level1=${this.props.level1}` +",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                `&level2=${this.props.level2}&level3=${this.props.level3}` +",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                `&id=${this.props.id}&level1Id=${this.props.level1Id}` +",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "                                `&admin=${localStorage.getItem('admin')}`, {",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "    headers: { 'Authorization': 'Bearer ' + localStorage.getItem('token')}",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "  })",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "move request function that uses a promise to its own module",
                  "Add test suite for non-RFC proxy servers",
                  "Fix HTTPS support"
                ],
                "precision": "very-high",
                "repoDatasetSize": 392,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "javascript/JwtDecodeMethod",
              "name": "JwtDecodeMethod",
              "shortDescription": {
                "text": "Insecure JWT Verification Method"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSome JSON Web Token (JWT) parse/decode methods do not enforce validation or integrity checks of the JWT. If an application relies on these methods to authenticate users, an attacker could create arbitrary JWTs that may be accepted by the application.\n\n### Best practices for prevention\n\n- Always enforce JWT signature verification by using safe verification methods to ensure the structure and integrity of the JWT is validated before processing.\n\n### References\n\n* [JWT Validation](https://auth0.com/docs/secure/tokens/json-web-tokens/validate-json-web-tokens)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 0,
                "cwe": [
                  "CWE-347"
                ]
              }
            },
            {
              "id": "javascript/HardcodedSecret/test",
              "name": "HardcodedSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/OriginProtocol/origin/commit/819a0adc70c0ca365e2763f384c419f98d992889?diff=split#diff-3a0fb050cbc279d8503f39fc1ccca7aeL13",
                    "lines": [
                      {
                        "line": "  */",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "function encrypt(str) {",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const key = crypto.scryptSync(encryptionSecret, 'salt', 24)",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const iv = Buffer.alloc(16, 0) // TODO: use a random iv",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const cipher = crypto.createCipheriv('aes-192-cbc', key, iv)",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  let encrypted = cipher.update(str, 'utf8', 'hex')",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  encrypted += cipher.final('hex')",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const iv = crypto.randomBytes(16)",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const cipher = crypto.createCipheriv(algorithm, key, iv)",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const encrypted = cipher.update(str, 'utf8', 'hex') + cipher.final('hex')",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return iv.toString('hex') + encrypted",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Midburn/Volunteers/commit/50cf644a3ddb072f8e8b927aac4c895cb40cfd91?diff=split#diff-8ee23682d0ff8afcd5263397c93de82eL32",
                    "lines": [
                      {
                        "line": "try {",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "    jwt.verify(token, 'secret');",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    jwt.verify(token, SECRET);",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "    next();",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 44,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/elifesciences/elife-xpub/commit/7f0797353fd42e638dd2ab3f36e790f626517daa?diff=split#diff-5d398477645cab4af9ca9b982a53cf5eL24",
                    "lines": [
                      {
                        "line": "  // TODO: This should come out of config",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return sign(payload, 'test')",
                        "lineNumber": 23,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return sign(payload, process.env.JWT_SECRET || '')",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 24,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Refactor JWT tests",
                  "Use json config file for secrets and passwords.",
                  "add the jwt env file for token generate"
                ],
                "precision": "very-high",
                "repoDatasetSize": 194,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n### Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/feup-infolab/dendro/commit/af4689bf0d26af0607567c46922251ac07922dea?diff=split#diff-3ee957c630ef81dd1016237f56c05e070eff7d84460f45ae3c25ab0441fa79b9L25",
                    "lines": [
                      {
                        "line": "var crypto = require('crypto'),",
                        "lineNumber": 24,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    shasum = crypto.createHash('sha1');",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "shasum.update(req.body.password);",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var encodedPassword = shasum.digest('hex');",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var crypto = require('crypto');",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "const key = crypto.pbkdf2Sync(req.body.password, user.ddr.salt, 100000, 512, 'sha512');",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "var encodedPassword = key.toString('hex');",
                        "lineNumber": 26,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/coderaiser/cloudcmd/commit/1c3a97fbad9c22f94000e89384321642affbf80d?diff=split#diff-0502e5ba15e6b2caa99bf88e97eb4fef9994e885299ee3df4efd1b51a59e13f0L104",
                    "lines": [
                      {
                        "line": "sha     = crypto.createHash('sha1');",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "sha     = crypto.createHash('sha512WithRSAEncryption');",
                        "lineNumber": 103,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Swizec/node-unshortener/commit/e9a84efd37b3d65ff14f44e11297b28b8987d38e?diff=split#diff-d94bcce9e1b6dc29137c2d0fe590e001ef186ba13f7ed1322296e70e7e0196b8L75",
                    "lines": [
                      {
                        "line": "memclient.set( md5(url.href), JSON.stringify(result), 1000);",
                        "lineNumber": 74,
                        "lineChange": "removed"
                      },
                      {
                        "line": "memclient.set( hash.sha256(url.href), JSON.stringify(result), 1000);",
                        "lineNumber": 74,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "switch to sha256",
                  "Files are now hashed with SHA512 instead of SHA1"
                ],
                "precision": "very-high",
                "repoDatasetSize": 101,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "javascript/Ssti",
              "name": "Ssti",
              "shortDescription": {
                "text": "Improper Neutralization of Directives in Statically Saved Code"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\n\nAn attacker exploits this weakness by indirectly controlling the contents of an executable server-side file (such as `.php` or `.aspx`) to trick the server into accessing sensitive data, providing authentication, or even executing shell commands. This weakness is sometimes also known as **Server-Side Template Injection (SSTI)**, since templates are one of the most common types of resources that suffer from this weakness.\nThese types of attacks differ from cross-site scripting (XSS) attacks, which take place on the client side and are generally more easily detected. However, code that is vulnerable to XSS attacks may also be vulnerable to SSTI attacks, since they arise through similar design flaws. And similar to XSS and other injection-type attacks, SSTI attacks are relatively preventable through proactive planning and design during development.\n\n### Best practices for prevention\n* Take a preventative, zero-trust approach and implement safer methods of processing user-controllable input on pages issuing directives to the server.\n* Never pass incoming data directly to the server. Instead, sanitize and validate all incoming data from the client side, ideally checking it against an allowlist of valid actions and destinations (instead of just parsing for banned characters).\n* Select template engines that use sandboxing or allowlists to defend against the possibility of SSTI. However, keep in mind that these may have intrinsic weaknesses.\n* Test applications using lists of publicly available template expression test strings and problematic payloads for your PHP template engine.\n* Given the fallibility of parsing approaches and sandboxing, consider implementing complementary protection methods, such as kernel hardening and read-only filesystems.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/bipbop/harlan/commit/f7f1a10756926787b42e11dbf47f848da36ff799?diff=split#diff-aad26a354c69662c1c80143889e9604cL5",
                    "lines": [
                      {
                        "line": "const Templates = function () {",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "    ",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "    this.render = function (path, view, callback) {",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        return $.get('templates/' + path + '.tpl', function (data) {",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            callback(Mustache.render(data, view));",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        });",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    };",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    this.render = (path, view, callback) => $.get(`templates/${path}.tpl`, data => {",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "        callback(Mustache.render(data, view));",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "};",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": " ",
                        "lineNumber": 9,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/OmarIthawi/arabic-mathjax/commit/08baac43892b5a401be2524f01999a73d8489577?diff=split#diff-5f34d6fd428013b64e432638e3e0378fL2",
                    "lines": [
                      {
                        "line": "jQuery(function($) {",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    $.get('equations.html', function(template) {",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        var rendered = Mustache.render(template, {",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            equations: EQUATIONS",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        });",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var renderEquations = function () {",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "  var $ = jQuery;",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": " ",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  $.get('equations.html', function (template) {",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var rendered = Mustache.render(template, {",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "      equations: EQUATIONS",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/borisding/universsr/commit/c88b733fc8c1b46c31137c06f7d7f234cea059db?diff=split#diff-f53e59f241bb62f0261e245350683e07L39",
                    "lines": [
                      {
                        "line": "// also, should allow it to be mounted as middleware for production usage",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "export default function serverRenderer({ clientStats }) {",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return async (req, res, next) => {",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "      clearChunks();",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "const renderedAppString = await frontloadServerRender(() =>",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "  renderToString(",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "    <Provider store={store}>",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "      <StaticRouter location={req.url} context={context}>",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      <StaticRouter location={url} context={context}>",
                        "lineNumber": 53,
                        "lineChange": "added"
                      },
                      {
                        "line": "        {renderRoutes(routes)}",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "      </StaticRouter>",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Add base filters for rendering",
                  "[ RELEASE ] inject initial state to store from server",
                  "use es6 modules"
                ],
                "precision": "very-high",
                "repoDatasetSize": 100,
                "cwe": [
                  "CWE-96"
                ]
              }
            },
            {
              "id": "javascript/PrototypePollution",
              "name": "PrototypePollution",
              "shortDescription": {
                "text": "Prototype Pollution"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nPrototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects. JavaScript allows all Object attributes to be altered, including their magical attributes such as `_proto_`, `constructor` and `prototype`. An attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values.  Properties on the `Object.prototype` are then inherited by all the JavaScript objects through the prototype chain. When that happens, this leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path that the attacker injects, thereby leading to remote code execution.\n\nThere are two main ways in which the pollution of prototypes occurs:\n\n-   Unsafe `Object` recursive merge\n\n-   Property definition by path\n\n\n### Unsafe Object recursive merge\n\nThe logic of a vulnerable recursive merge function follows the following high-level model:\n```\nmerge (target, source)\n\n  foreach property of source\n\n    if property exists and is an object on both the target and the source\n\n      merge(target[property], source[property])\n\n    else\n\n      target[property] = source[property]\n```\n<br>\n\nWhen the source object contains a property named `_proto_` defined with `Object.defineProperty()` , the condition that checks if the property exists and is an object on both the target and the source passes and the merge recurses with the target, being the prototype of `Object` and the source of `Object` as defined by the attacker. Properties are then copied on the `Object` prototype.\n\nClone operations are a special sub-class of unsafe recursive merges, which occur when a recursive merge is conducted on an empty object: `merge({},source)`.\n\n`lodash` and `Hoek` are examples of libraries susceptible to recursive merge attacks.\n\n### Property definition by path\n\nThere are a few JavaScript libraries that use an API to define property values on an object based on a given path. The function that is generally affected contains this signature: `theFunction(object, path, value)`\n\nIf the attacker can control the value of \"path\", they can set this value to `_proto_.myValue`. `myValue` is then assigned to the prototype of the class of the object.\n\n## Types of attacks\n\nThere are a few methods by which Prototype Pollution can be manipulated:\n\n| Type |Origin  |Short description |\n|--|--|--|\n| **Denial of service (DoS)**|Client  |This is the most likely attack. <br>DoS occurs when `Object` holds generic functions that are implicitly called for various operations (for example, `toString` and `valueOf`). <br> The attacker pollutes `Object.prototype.someattr` and alters its state to an unexpected value such as `Int` or `Object`. In this case, the code fails and is likely to cause a denial of service.  <br>**For example:** if an attacker pollutes `Object.prototype.toString` by defining it as an integer, if the codebase at any point was reliant on `someobject.toString()` it would fail. |\n |**Remote Code Execution**|Client|Remote code execution is generally only possible in cases where the codebase evaluates a specific attribute of an object, and then executes that evaluation.<br>**For example:** `eval(someobject.someattr)`. In this case, if the attacker pollutes `Object.prototype.someattr` they are likely to be able to leverage this in order to execute code.|\n|**Property Injection**|Client|The attacker pollutes properties that the codebase relies on for their informative value, including security properties such as cookies or tokens.<br>  **For example:** if a codebase checks privileges for `someuser.isAdmin`, then when the attacker pollutes `Object.prototype.isAdmin` and sets it to equal `true`, they can then achieve admin privileges.|\n\n## Affected environments\n\nThe following environments are susceptible to a Prototype Pollution attack:\n\n-   Application server\n\n-   Web server\n\n\n## How to prevent\n\n1.  Freeze the prototype - use `Object.freeze (Object.prototype)`.\n\n2.  Require schema validation of JSON input.\n\n3.  Avoid using unsafe recursive merge functions.\n\n4.  Consider using objects without prototypes (for example, `Object.create(null)`), breaking the prototype chain and preventing pollution.\n\n5.  As a best practice use `Map` instead of `Object`.\n\n### For more information on this vulnerability type:\n\n[Arteau, Oliver. \"JavaScript prototype pollution attack in NodeJS application.\" GitHub, 26 May 2018](https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/angular/angular/commit/c5c6d84fe6bca821dee283cedd691a620a79e4e4?diff=split#diff-4bcfbf99e5f14ffe12cdd29f626ad1f94880e9b91ba2cf6c3829bcf6a07e120dL148",
                    "lines": [
                      {
                        "line": "const navMapItem = navMap[cleanedUrl] = navMap[cleanedUrl] || {};",
                        "lineNumber": 147,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (!navMap.has(cleanedUrl)) {",
                        "lineNumber": 147,
                        "lineChange": "added"
                      },
                      {
                        "line": "  navMap.set(cleanedUrl, {});",
                        "lineNumber": 148,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 149,
                        "lineChange": "added"
                      },
                      {
                        "line": "const navMapItem = navMap.get(cleanedUrl)!;",
                        "lineNumber": 150,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/CommitAnalyzingService/CAS_Web/commit/ccf54ba197e7edb4feebdcd88ba7d133eb8e1901?diff=split#diff-7330bb3c5749d88d8a280c3e31de2b70c660bd02fc4cf46f82ab61126a72e298L118",
                    "lines": [
                      {
                        "line": "for(var i in commits) {",
                        "lineNumber": 117,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t",
                        "lineNumber": 118,
                        "lineChange": "removed"
                      },
                      {
                        "line": "for(var i = 0, l = commits.length; i < l; i++) {",
                        "lineNumber": 116,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t// Parse each commit and update thresholds",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "\trepoMetrics.parseCommit(commits[i]);",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t// Now normalize the fileschanged",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tcommits[i].fileschanged = commits[i].fileschanged",
                        "lineNumber": 123,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/VincentLoy/tweetParser.js/commit/31ccbf365abbb6398fb78705074c11458421cec6?diff=split#diff-343e9403c50c367c18f841170513c764a80c01c26a0d9c2746a5fd632febe770L19",
                    "lines": [
                      {
                        "line": "for (var i in datas) {",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var i;",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "for (i = 0; i < datas.length; i += 1) {",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (datas[i].contributions > 1) {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "        datas[i].wording = \"contributions\";",
                        "lineNumber": 22,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* First pass of create mapping tests for gradle",
                  "add put tests",
                  "initial commit with test data"
                ],
                "precision": "very-high",
                "repoDatasetSize": 354,
                "cwe": [
                  "CWE-1321"
                ]
              }
            },
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/how-to-firebase/fogo/commit/a3d5054fa9e7da0201e2709d847102a00a525067?diff=split#diff-ef1bae33e98527602bd4e6bfe2fe6c04747d71e6655a5c718f7100b844c9bb6eL158",
                    "lines": [
                      {
                        "line": "  return `/tmp/${path.parse(filename).base}`;",
                        "lineNumber": 157,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  return `/tmp/${Date.now()}`;",
                        "lineNumber": 157,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 158,
                        "lineChange": "none"
                      },
                      {
                        "line": "function convertLocalFile(localFilename, versionName) {",
                        "lineNumber": 160,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const cmd = getCmd(localFilename, versionName);",
                        "lineNumber": 161,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return execPromise(cmd);",
                        "lineNumber": 162,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 163,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getCmd(localFilename, versionName) {",
                        "lineNumber": 165,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return `convert ${localFilename} -resize ${versionName}\\\\> ${localFilename}`;",
                        "lineNumber": 166,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "function execPromise(cmd) {",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new Promise((resolve, reject) =>",
                        "lineNumber": 170,
                        "lineChange": "none"
                      },
                      {
                        "line": "    exec(cmd, (error, stdout) => (error ? reject(error) : resolve(stdout)))",
                        "lineNumber": 171,
                        "lineChange": "none"
                      },
                      {
                        "line": "  );",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 173,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getDestination(filename, versionName) {",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const filenameParts = filename.split('/');",
                        "lineNumber": 176,
                        "lineChange": "none"
                      },
                      {
                        "line": "  filenameParts[filenameParts.length - 2] = versionName;",
                        "lineNumber": 177,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return filenameParts.join('/');",
                        "lineNumber": 178,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 179,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getFile(admin, filename) {",
                        "lineNumber": 181,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return admin",
                        "lineNumber": 182,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .storage()",
                        "lineNumber": 183,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .bucket()",
                        "lineNumber": 184,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .file(filename);",
                        "lineNumber": 185,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "function unlinkPromise(localFilename) {",
                        "lineNumber": 188,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new Promise(",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "    (resolve, reject) => fs.unlink(localFilename, err => err && reject(err)) || resolve()",
                        "lineNumber": 190,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/zhoukekestar/modules/commit/b6c2fc78dc8679080b982124a24771f1466b2fb2?diff=split#diff-7347edae6e14bc50ee18f048e29145ce21cf3bb679d0391605c283ec246942bcL20",
                    "lines": [
                      {
                        "line": "res.sendFile(dir + '/' + req.params.id);",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// Test ok on winodws. Not sure that linux will be work ok.",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.sendFile((dir + '/' + req.params.id).replace(/\\//g, '\\\\\\\\'));",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/NodeBB/NodeBB/commit/cacc732015c64bba55a6ab45510086febccfb1b2?diff=split#diff-300f765b568b38163933bfcd40c75fe91709a35e9a7522bca2f8c5fe4b19195aL102",
                    "lines": [
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, req.files.userPhoto.name, req.files.userPhoto.path, res);",
                        "lineNumber": 101,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);",
                        "lineNumber": 101,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\treturn;",
                        "lineNumber": 102,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t}",
                        "lineNumber": 103,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t",
                        "lineNumber": 104,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tvar absolutePath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), path.basename(oldpicture));",
                        "lineNumber": 105,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t",
                        "lineNumber": 106,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tfs.unlink(absolutePath, function(err) {",
                        "lineNumber": 107,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tif(err) {\t\t\t\t",
                        "lineNumber": 108,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tconsole.error('[%d] %s', Date.now(), + err);",
                        "lineNumber": 109,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t}",
                        "lineNumber": 110,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t",
                        "lineNumber": 111,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\tuploadUserPicture(req.user.uid, path.extname(req.files.userPhoto.name), req.files.userPhoto.path, res);",
                        "lineNumber": 112,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t",
                        "lineNumber": 113,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});",
                        "lineNumber": 114,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t});",
                        "lineNumber": 115,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 116,
                        "lineChange": "none"
                      },
                      {
                        "line": "function uploadUserPicture(uid, extension, tempPath, res) {",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tif(!extension) {",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tres.send({",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\terror: 'Error uploading file! Error : Invalid extension!'",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t});",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\treturn;",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t}",
                        "lineNumber": 124,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar filename = uid + '-profileimg' + extension;",
                        "lineNumber": 126,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar uploadPath = path.join(global.configuration['ROOT_DIRECTORY'], global.nconf.get('upload_path'), filename);",
                        "lineNumber": 127,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t",
                        "lineNumber": 128,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t// @todo move to proper logging code - this should only be temporary",
                        "lineNumber": 129,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tconsole.log('Info: Attempting upload to: '+ uploadPath);",
                        "lineNumber": 130,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t",
                        "lineNumber": 131,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar is = fs.createReadStream(tempPath);",
                        "lineNumber": 132,
                        "lineChange": "none"
                      },
                      {
                        "line": "\tvar os = fs.createWriteStream(uploadPath);",
                        "lineNumber": 133,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "- only tested with files",
                  "add integer support, and failing tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 760,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/HTTPSourceWithUncheckedType",
              "name": "HTTPSourceWithUncheckedType",
              "shortDescription": {
                "text": "Improper Type Validation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen an object is coming from `req.body` or `req.query`, coming from the express framework. The value of this property can be controlled by the user. This could be abused by an attacker to craft the properties of the object to crash the application or bypass its logic. As such, consider checking the type of the object.\n\nIf this weakness is present, illegitimate input provided from the user's end could lead to unpredictable results such as the program crashing, unauthorized access to secure resources or command execution at the server side. In addition, if the server is overwhelmed by these types of malfunctions, it may lead to denial of service to legitimate users and tasks.\n\nExample:\n\n```\nmodule.exports = function(req, res) {\n    var data = req.query;\n      // type of value isnt checked before being used\n      data.ids = data.ids.split(',');\n      doStuff(data.ids);\n\n  };\n```\n\n\n\n### Best practices for prevention\n* Adopt a zero-trust model in which all input is considered potentially suspect.\n* Check the type of the object.\n\nExample:\n\n```\nmodule.exports = function(req, res) {\n    var data = req.query;\n    if (data.ids && typeof data.ids == 'string') {\n\n      // type of value is checked\n      data.ids = data.ids.split(',');\n      doStuff(data.ids);\n    } else {}\n  };\n```\n\n###  References\n\n* [CWE-1287: Improper Validation of Specified Type of Input](https://cwe.mitre.org/data/definitions/1287.html)\n* [JavaScript type confusion: Bypassed input validation (and how to remediate)](https://snyk.io/blog/remediate-javascript-type-confusion-bypassed-input-validation/)\n* [req.query Documentation](https://expressjs.com/en/4x/api.html#req.query)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jeresig/pharos-images/commit/10d5a93ac502608b07604724e868137d70baa937?diff=split#diff-2b1abe3e454f898854a026d1836d1577L27",
                    "lines": [
                      {
                        "line": "filter: {",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    value: (req) => req.query.filter,",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    value: (fields) => fields.filter,",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "    title: (req, query) => req.format(",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "        req.gettext(\"Query: '%(query)s'\"), {query: query.filter}),",
                        "lineNumber": 28,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ToManage/TM-CRM_ERP/commit/d8869b82d90ec068552d3b01e20f3f7e36e8ec76?diff=split#diff-b7095dc6f2419facadbce3209c03e25eL2075",
                    "lines": [
                      {
                        "line": "if (self.req.query.filter) {",
                        "lineNumber": 2072,
                        "lineChange": "none"
                      },
                      {
                        "line": "    query.$or = [{",
                        "lineNumber": 2073,
                        "lineChange": "none"
                      },
                      {
                        "line": "        name: new RegExp(req.query.filter, \"gi\")",
                        "lineNumber": 2074,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        name: new RegExp(self.query.filter, \"gi\")",
                        "lineNumber": 2058,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }, {",
                        "lineNumber": 2075,
                        "lineChange": "none"
                      },
                      {
                        "line": "        code_client: new RegExp(req.query.filter, \"gi\")",
                        "lineNumber": 2076,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        code_client: new RegExp(self.query.filter, \"gi\")",
                        "lineNumber": 2060,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mike-engel/bkmrkd/commit/4fa34ad184a4b2908a4cadca304f98058111c60b?diff=split#diff-4bd320e8162d3b895b8fc9933c232714L9",
                    "lines": [
                      {
                        "line": "// /search?term=funny%20dogs",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "searchRouter.route('/')",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .get((req, res) => {",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    const searchTerm = req.query.term.toLowerCase()",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const searchTerm = (req.query.term || '').toLowerCase()",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    console.log(searchTerm)",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    searchBookmarks(searchTerm, (err, results) => {",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "start to implement API v2 tests",
                  "test - remove logging.",
                  "- Test top-level renderer output to ensure all devdash pages are AMPHTML valid!"
                ],
                "precision": "very-high",
                "repoDatasetSize": 477,
                "cwe": [
                  "CWE-1287"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps/test",
              "name": "HttpToHttps/test",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n### Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Rocket1184/qq-bot-rebown/commit/5255a8398cf1d80f60e182c53e8532c7562e76c2?diff=split#diff-62a4be7247c4abe75f2cc11746422b86L12",
                    "lines": [
                      {
                        "line": "'use strict';",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const http = require('http');",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require('https');",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "function http2https(link) {",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": " ",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "function shortenUrl(url) {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qmachine/qmachine/commit/1f9f08b5b1f9be78dd6625d93ec934befb255df7?diff=split#diff-54387be96a26d96583a0c7585e8607c5L56",
                    "lines": [
                      {
                        "line": "};",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "http = require('http');",
                        "lineNumber": 55,
                        "lineChange": "removed"
                      },
                      {
                        "line": "https = require('https');",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "http_GET = function (x) {",
                        "lineNumber": 57,
                        "lineChange": "removed"
                      },
                      {
                        "line": "https_GET = function (x) {",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vmware-samples/vmware-blockchain-samples/commit/0e45b89996cc8ae87d4f6bd2240720fa70daccd1?diff=split#diff-21a000feb5ae912714215842b628c63cL3",
                    "lines": [
                      {
                        "line": "const fs = require(\"fs\");",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const http = require(\"http\");",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require(\"https\");",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "verifyMigrations();",
                        "lineNumber": 10,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added https imposter tests;"
                ],
                "precision": "very-high",
                "repoDatasetSize": 631,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "javascript/HardcodedNonCryptoSecret/test",
              "name": "HardcodedNonCryptoSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n### Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/krakenjs/lusca/commit/a871c0a7f2b6641fb882d2b902b0910f6ac60b7b?diff=split#diff-398ed3b014436a5204583323ea29320bL7",
                    "lines": [
                      {
                        "line": " ",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "var crypto = require('crypto');",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "var SECRET = '_csrfSecret';",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var SECRET;",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "var LENGTH = 10;",
                        "lineNumber": 7,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/koajs/generic-session/commit/9248ff8055dd226ccf45c67e329cae587741c077?diff=split#diff-26b5d3c164692791a09225732456b5ecL28",
                    "lines": [
                      {
                        "line": "app.use(session({",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "  secret: 'koa-session-secret',",
                        "lineNumber": 27,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  key: 'koss:test_sid',",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "  cookie: {",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    httpOnly: true,",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "     maxAge: 86400,",
                        "lineNumber": 30,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/haiwen/seahub/commit/2f0fb01f021374d0afe8bea71f85eda464c1a672?diff=split#diff-cd2b9459006cf24c29c3b74771e950d5L21",
                    "lines": [
                      {
                        "line": "  fileName: fileName,",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "  dtableUuid: dtableUuid,",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "  accessToken: '12345678'",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  accessToken: ''",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "};",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Update tests so dev's can run without secret ()",
                  "Clean up key usage in tests.",
                  "use config for tests"
                ],
                "precision": "very-high",
                "repoDatasetSize": 657,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n### Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/comatory/fb2iCal/commit/6a1ef614ade7ba821009dbce4a615d448751a449?diff=split#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R5",
                    "lines": [
                      {
                        "line": "const rateLimit = require('express-rate-limit')",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "const crawl = require('./crawler')",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "const parseHTML = require('./parser')",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const generateICS = require('./ics')",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "const { genericErrorHandler, checkFBURL } = require('./middlewares')",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const port = process.env.PORT",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express()",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('view engine', 'ejs')",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('views', path.join(__dirname, 'views'))",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.static(path.join(__dirname, 'public')))",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')))",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(bodyParser())",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/', (req, res) => {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.render('index')",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/error', (req, res) => {",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const error = req.error || req.query.error || ''",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .status(500)",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .render('error', { error })",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "// NOTE: Capture all unkown URLs",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('*', (req, res) => {",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.status(400).render('404')",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "})",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/download', checkFBURL)",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/download', rateLimit())",
                        "lineNumber": 39,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "WIP Fix server tests.",
                  "* Fixed tests failing due to a renamed file.",
                  "first tests with isomorphic rendering"
                ],
                "precision": "very-high",
                "repoDatasetSize": 1164,
                "cwe": [
                  "CWE-770"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in post.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02a558420cf787744c12914ef3c8e7c28e208d836b6f6fd6c30df19e3279d337",
            "1": "cf7733e4.4773f344.4618e071.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.b6dc01e6.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.0b4f0b50.870b3dbe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in post.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "642a1e29f4a106b6780d814ab6e29fd59a7a7f18a65b1a2c246e541c1403d390",
            "1": "cef70b10.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5d11da4a.382555c6.b6dc01e6.4773f344.bd65d204.e052b9a9.79a7d027.6844341c.d0c8c137.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in post.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/securityAnswerApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1a4d9701ce12213113b71d1c2c20ad0620ff7af56c3fcc21684a41bbb10af706",
            "1": "30fc945a.4773f344.607187b5.e052b9a9.79a7d027.0ef49ff8.6c0e7048.382555c6.30fc945a.4773f344.bd65d204.e052b9a9.79a7d027.0ef49ff8.0b4f0b50.b5f95001"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/securityAnswerApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in post.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b57ae4eb1ac652080903b21557c29aeed6886cdeffa924ecf963c73bf6a8cca4",
            "1": "cf7733e4.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.b6dc01e6.4773f344.c9330245.00838302.79a7d027.b392ea15.d79c4c07.f6cafdbe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in post.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 50,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "04f8206c64b41312e7ff69bd6a7bbaea39603b5d561923946f48e4f2d1f09a44",
            "1": "cf7733e4.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.b6dc01e6.4773f344.c9330245.00838302.79a7d027.a536c3b3.fcf36185.5397a62b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3602bd0d820a0033aefee85af6aeff5deb2bd87a0ab93a04cb87ca3e4ed2fccf",
            "1": "d557d5dd.4773f344.4618e071.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 132,
                  "endLine": 132,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "11ca04d0409c7b5d79c72fe597a3ddd118df0409d1e6b0fac143a9a54363f757",
            "1": "d557d5dd.4773f344.4618e071.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "619b311eba90e97b04717b1ad479b265f347ad0b7b68e381021722940647011f",
            "1": "d557d5dd.4773f344.4618e071.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 166,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 243,
                  "endLine": 243,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "35a4e6488345319819103cee97fd3ba1872fab9ca4ebc8bdb5037f02effd737e",
            "1": "d557d5dd.4773f344.4618e071.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/chatbot.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3,
                  "startColumn": 16,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2cf8e04af24c00270b9db8ca34670fa9c4c8e5d1bfcd283335366245030f56cc",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/chatbot.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/register.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 9,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "592f86b46c37c1024b31a421e2f788fb20ba1af0ad12b0018f2e4c1e5d446ecb",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/register.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/dataErasure.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3,
                  "startColumn": 16,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb01df7eaf864be3f98637c4aea3a505ae472af53211d927a241cc5c823b4b61",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/dataErasure.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/totpSetup.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "11b064c126c8586951c5fd4bbd042203661ba92c3e6f33cb6d2fd4bc5cda0c08",
            "1": "255f74e7.4773f344.4083db9c.02c26c8f.79a7d027.a3ed429a.6c0e7048.382555c6.28d3f2f0.4773f344.bd65d204.02c26c8f.79a7d027.a3ed429a.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/totpSetup.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/profile.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3,
                  "startColumn": 16,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "93de40d8c8799b3019a379a4268f1fa469ec68c34abd1ca4d646af9dac95c2f3",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/profile.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/contact.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "977957e92fb519b8fd86c3ea7fc055b214aa296937c2b5be327055e1d2c9da4f",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/contact.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/contact.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2fff2d369ff6fd468818d6e535f39389de0eafd9c09285e7484ca4d143e1372f",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/contact.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4a994e4c1e7af1e4711d13be2dbea0426db281393d754a247fb72c8cf4e3681f",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.4ca94ad3.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "393a6522af7d7a768d34797f27d3ddb7925cb3ccc2d2558a67a308dfb9a1699d",
            "1": "16bfb46e.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.edc07f47.382555c6.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.2ae8f124"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c6f12dcce7ce649f5db0e0de098ea417db525e8387939850f7c75871654d81ee",
            "1": "16bfb46e.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.edc07f47.382555c6.28d3f2f0.4773f344.bd65d204.0a48d7c0.79a7d027.89fb1e95.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f7a674789580234888393e25b19ae42c903f7e48265e7f93c03de9a8bc4438a8",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "75230d546f0df6a15fa5e55dde9dfd3c2eaa56c03a8214ff4c1e6793d92bbdc6",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 78,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5b4ced3f16073b1bb3558f751c8130f1ad9b415955c2d273b197be6cea255b59",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.bfb661b6.382555c6.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.10f2eeef.d9612bd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 122,
                  "endLine": 122,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b92d2c50ec88cb18a02cfc7631d6d9547060928fb96f80981703c4cc4363dc4d",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.bfb661b6.382555c6.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.10f2eeef.d9612bd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/dataExport.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b7741108c59275aa92b7f8aff200b81f75e39b529dc1574fa369a42713f54372",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.ce977977.382555c6.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/dataExport.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e90c87611f4be60daf570715e0165b64e99650398d9f0bd1a4b6faf20a88bf2f",
            "1": "cf7733e4.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.00838302.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 236,
                  "endLine": 236,
                  "startColumn": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a7ae298d086329de73ee00033dbe94453b37a4f9216c9f1b83e4507b064a93af",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.00838302.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 236,
                            "endLine": 236,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 282,
                  "endLine": 282,
                  "startColumn": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "158112adf923156e6f13d57e138056d813818e1e8ba2308c9bc0c0815e3c009b",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 311,
                  "endLine": 311,
                  "startColumn": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e876915769345f3b17b9b461af11e4f1c75ba89887390243026a6674ae5fff19",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 340,
                  "endLine": 340,
                  "startColumn": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "39886c2ad85fd58a05b6c48f81a1e577a01ea4d4ce9f79405000d211132efbcb",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 397,
                  "endLine": 397,
                  "startColumn": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "49819ff04eaa1a49b6a7ff5d243bb84fc7de514ae06478901e19a2c7bf28713c",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.d79c4c07.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 434,
                  "endLine": 434,
                  "startColumn": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "958c514db882f276049244a1410444ea8ec3c69ec50eeb012811a9a424a2b53c",
            "1": "d557d5dd.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.d79c4c07.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 434,
                            "endLine": 434,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/b2bOrder.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2d80003613f59ccb561c31e0fded684d0e2b4c60b55ab7894688a83dca29ac14",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/b2bOrder.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/b2bOrder.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb82a0627d1149b9a5b87fc1e4e2c1850714d341debba7f7e2f9f6db83615b76",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/b2bOrder.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/restApi.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fc2df7d618d9cb1b787e5e0f6455ed4ca1b03e6d999f1cd26db0984c37061c88",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/restApi.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/restApi.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02dfca7a82de8cce93f53c0dd628987d78a2a5f7893a5ab95416221413439e3f",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/restApi.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/search.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2f39e9c6014cf143c6ee71b78b1a88aa320c5a9830da02f00c7d380bc8c8ef61",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/search.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/search.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 9,
                  "endColumn": 14
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f224551d0568e765e4bc7f7ce65e1565be1bf9eed3a32113a4a640e86c089760",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/search.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/administration.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3c5ba07c56ecdd671286a23aeb52e317071fb6bc9c7db29b083dc468baf41a8f",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/administration.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/basket.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "startColumn": 18,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "85a24fa454809c371aba376dce188cc9914ca097e46b5105520f1d4196676249",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/basket.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in login.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/complain.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "startColumn": 7,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "09a9887afc5019452f9f19d408976b9df34880a9e5c2058ac876ee4adfc2c40e",
            "1": "d86d2e58.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.5134f291.382555c6.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/complain.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in register.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 235,
                  "endLine": 235,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9396c025c1f7023363b5ea792a16b1d0abb2e183da182b054b055b1a86888918",
            "1": "d557d5dd.4773f344.4aa5360a.00838302.79a7d027.f7edcf51.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.00838302.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 235,
                            "endLine": 235,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in register.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a74991eb3549ba8d52b426199435acabfd499a9ec7f8cbca7ae0291d7e0c6dc7",
            "1": "d557d5dd.4773f344.607187b5.d7919eeb.79a7d027.b392ea15.6c0e7048.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in register.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 310,
                  "endLine": 310,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "54105ca2b0cd4b622140b1e173801fcf9e4bbc09b1b2ea161444705fb5936cb1",
            "1": "d557d5dd.4773f344.607187b5.d7919eeb.79a7d027.f7edcf51.8ca8f00f.f6cafdbe.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in register.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 339,
                  "endLine": 339,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ef209bebf1adca887b9b2ce204673874294d8e314dfd9aa5ec2ace8f273d9260",
            "1": "d557d5dd.4773f344.607187b5.d7919eeb.79a7d027.f7edcf51.8a2ac5c4.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 339,
                            "endLine": 339,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in register.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 396,
                  "endLine": 396,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0df952e0c180c52854d6919b014e50ddb8fb548cc6cc101fcee86385a5618e7b",
            "1": "306348b3.4773f344.607187b5.d7919eeb.79a7d027.f7edcf51.d79c4c07.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.d79c4c07.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 396,
                            "endLine": 396,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedCredentials/test",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "text": "Do not hardcode credentials in code. Found hardcoded credential used in register.",
            "markdown": "Do not hardcode credentials in code. Found hardcoded credential used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 433,
                  "endLine": 433,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "406af9b904e9b91700eb515b87979a86e7495640b3957ab2b0782b44aa4fbc0e",
            "1": "306348b3.4773f344.607187b5.d7919eeb.79a7d027.f7edcf51.d79c4c07.382555c6.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.d79c4c07.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 433,
                            "endLine": 433,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 414,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46)",
              "[fs.readFileSync](47)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/server/codingChallengeFixesSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 21,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b06b66e8ca7f8584d5a7476519ac43d240da0b4623813dac7c47c6f5167ae97b",
            "1": "cf7733e4.4773f344.c6c26b4e.c559ebce.c13f363e.f7edcf51.ea4b1c47.9b5cefb9.cf7733e4.b6e32c83.c9330245.ac4b9baf.537aa34a.8020cfdf.cd61fc56.03abff9d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 45,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 54,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 59,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 92,
                            "endColumn": 97
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 33,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 7,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 159,
                            "endLine": 159,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 42,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 55,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 62,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 73,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 38,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 81,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 30,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 91,
                            "endColumn": 96
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 109,
                            "endColumn": 110
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 114,
                            "endColumn": 115
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 116,
                            "endColumn": 124
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 114,
                            "endColumn": 124
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 102,
                            "endColumn": 108
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 5,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 10,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 30,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 16,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 52,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 91,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 62,
                            "endColumn": 108
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 46,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/PT/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35),(36),(37),(38),(39),(40),(41),(42),(43),(44),(45),(46),(47)",
              "[fs.readFileSync](48)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/server/codingChallengeFixesSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 21,
                  "endColumn": 30
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f8b2589bf600f5acc70b133b2a5bc0484f24b8baab90415d135dc6e0cada5e41",
            "1": "cf7733e4.4773f344.c6c26b4e.c559ebce.c13f363e.f7edcf51.ea4b1c47.9b5cefb9.cf7733e4.b6e32c83.c9330245.ac4b9baf.537aa34a.8020cfdf.cd61fc56.03abff9d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 45,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 105,
                            "endLine": 105,
                            "startColumn": 54,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 59,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 92,
                            "endColumn": 97
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 33,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 7,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 10,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 159,
                            "endLine": 159,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 42,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 55,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 62,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 73,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 47,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 38,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 30,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 81,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 30,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 91,
                            "endColumn": 96
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 109,
                            "endColumn": 110
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 114,
                            "endColumn": 115
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 116,
                            "endColumn": 124
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 114,
                            "endColumn": 124
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 102,
                            "endColumn": 108
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 11,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 160,
                            "endLine": 160,
                            "startColumn": 5,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 37,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 157,
                            "endLine": 157,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 38,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 10,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 39,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 30,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 40,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 41,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 29,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 42,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 16,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 43,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/server/codingChallengeFixesSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 31,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 44,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 45,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 52,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 46,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 91,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 47,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 62,
                            "endColumn": 108
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 48,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 46,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedSecret",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Hardcoded value is used as a cipher key (in crypto.createHmac). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[cipher key (in crypto.createHmac)](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/insecurity.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 20,
                  "endColumn": 902
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bd0cbcaad32d2a689a2b613cc191c8bd05eed93dbb3584632c7192475e3b7c61",
            "1": "ae77ea27.4773f344.8b18f948.d7919eeb.feee7bcb.5fce695c.c8cd882a.89d75565.839b1d0f.3458f5f1.191eaf2b.c559ebce.79a7d027.fbb912ee.b98ad8ad.6de55b96"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 20,
                            "endColumn": 902
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 166,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedSecret",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "text": "Hardcoded value is used as a cipher key (in crypto.createHmac). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[cipher key (in crypto.createHmac)](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/insecurity.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 43,
                  "startColumn": 62,
                  "endColumn": 88
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a5185adf6a7f5aca4bd3952e0479c4d25fff571efbab281f1c0cda2adfaa0ff",
            "1": "37bc1bfe.4773f344.191eaf2b.d9da6552.7b7eed37.8020cfdf.7a8c7288.71520ffe.3df95e84.4773f344.191eaf2b.d9da6552.7b7eed37.8020cfdf.53ce9024.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 62,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 34,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/UseCsurfForExpress",
          "ruleIndex": 3,
          "level": "warning",
          "message": {
            "text": "CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled for your {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4cc82662c0a01c5aeecda3281d9cecde009c1ca201d3c9b05009a58855080926",
            "1": "a2e188ea.3fe2c7c2.92b70f9d.dc122b89.f30fb760.6f1dd2cb.ceb6c0f9.0272b8be.a2e188ea.3fe2c7c2.b60fc218.dc122b89.f30fb760.5fce695c.ceb6c0f9.0272b8be"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 91,
                            "endLine": 91,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "be75465664bce184627ea044b7e907dce19baba7a094dde2ab351ddf794e92bf",
            "1": "75efb1df.3f481afb.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe.75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e3feaf1baa61f5fc5770ce6c78affc0ce283ffc1c945e4c20095552a1f39d113",
            "1": "75efb1df.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.f88a0de0.75efb1df.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.f88a0de0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "885eb95af7df6c15bd251af9e06f55ca9ff407914d733a7448a81457220d145d",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b02f6b31.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b02f6b31"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c2d988bba5887d0399c23a40678851e3b432dfa780af7fff15b9c7796401ce56",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b02f6b31.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b02f6b31"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "746a3832d7480cc6742b5f6aef8d4a477dc8ef46134b277e08878b347e4bdd5d",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 79,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "234e9f0454527d28322d2177107b29894b857194dfcfccbe2afbda4d6e531e00",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.c435f56a.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.c435f56a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 109,
                  "endLine": 109,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8be089ecb908996ef897d114b25ae8990a0334dd17931d2df1194e9cbe33516d",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec63094dfdf675d2eb17ff6939879c3ebb7af21aee91371973dd0eb3923e5e4d",
            "1": "01e8e257.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.9add11d4.01e8e257.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.9add11d4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 124,
                            "endLine": 124,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "endLine": 142,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7d77cafbfbd07f71531834afd18f31c03f6902b7f77c801cff8073331df893cb",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 142,
                            "endLine": 142,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 245,
                  "endLine": 245,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a3b70cb5d8cc37d0818795cc361bb78bc68795ff7338d3a27b57f2ebf213678f",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 245,
                            "endLine": 245,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 266,
                  "endLine": 266,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "81642c3a0027564ac5f2179a7c305664d73aa0af3db011e8bcc3bf904534003d",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 266,
                            "endLine": 266,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/register.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 84,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d1be0cb881ece0ca000cdda29905f5f2be19a473de70ca7b645560233611435b",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2c8e0fc2.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2c8e0fc2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/register.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d96757c692d36f65cf8a827f54f3955e2bc2be84e348cc479e5ed39fdc40437c",
            "1": "70220a27.be691101.bd65d204.d7919eeb.79a7d027.fa41e772.fb19cbf2.870b3dbe.70220a27.4773f344.bd65d204.d7919eeb.79a7d027.fa41e772.fb19cbf2.870b3dbe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 231,
                  "endLine": 231,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ae31b4666508b42165dfc7576c534cce924348b126f885f5a93684da076e3fa3",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 277,
                  "endLine": 277,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "70e9bb283a1a3d0f8cc9c88ad3bd0e34dd17e10728fac0f0156b12ba5807dbff",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 277,
                            "endLine": 277,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 306,
                  "endLine": 306,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7d01513a1c3145ec7ac41420cc8693b68084c0f095073109ad5aa45a5819c1f3",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 306,
                            "endLine": 306,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 335,
                  "endLine": 335,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f8ecfdba909ee053393f1f622f557fc02c44f1100bc8c6d8d74593f361971054",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 335,
                            "endLine": 335,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 364,
                  "endLine": 364,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc0ecc1ae77712f17b93b48c3e8b970183e898dac9c41dd45b97521eea032072",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.fb19cbf2.9add11d4.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.fb19cbf2.9add11d4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 364,
                            "endLine": 364,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 393,
                  "endLine": 393,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e662ffa5187e584bccfbaf3cd052602fe3fb04333ea91c3a7d989a5637eb8afe",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 393,
                            "endLine": 393,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 430,
                  "endLine": 430,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6a7fa4db3465bf53c939dd6d98f434d726d01932ab1d8abecad9eae60365d8db",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 430,
                            "endLine": 430,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/profileImageUploadSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c2254a7a6be022108b224e57fb1d24082c9b5d29761da07023ee9458079c84e4",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/profileImageUploadSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/profileImageUploadSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6f2c07fde914320c8f9ea075335ae72e7bf2275b8ed213b64b0351e56e544c95",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/profileImageUploadSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/profileImageUploadSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4c74e65901e0bdc7995773774975a4720d199a47a905f206f81e655ec6a15d43",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/profileImageUploadSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/profileImageUploadSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a161b0f23274c1bb921fca04607ab20e01d614492292183290510cea58a2805e",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/profileImageUploadSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f9399e39a90a7ce514beedea8c6ee92dcacdecf4b3b3bc17b54aadc1c35ad20b",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "199bb1ce0d68a30577039b4b373a83c98c68f6dce2a5fea7c56cf154557e0381",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8f6d59f93f997333980301731f7138dab3c796af150fcc4b0df4befe27519eaf",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e058345391c56aa24fec34aa08c651e4f4922d5022e0392b1234ab7a76084ee0",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 136,
                  "endLine": 136,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "def33321de6cdee32d85b673d22fd59049e0a574f62a401a7c7008adc6714dae",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "31ed39e29cc295a8a2fe9c9ca0571138f4e4d4cd9ce8196a304dbae4933aee3f",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 206,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a88a577c18175c6db5212c81849ffaab96f2fdbe67a3481d2fc05a13ad2179a1",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 206,
                            "endLine": 206,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 227,
                  "endLine": 227,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cfcfa55c3d5de8e36a9612af6868977cc3a45300b0172121d24c5d0065c746bf",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 227,
                            "endLine": 227,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 308,
                  "endLine": 308,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ced02fe93e1fd3e222997c69b8de7222f2b454306643c85f3f807ccba162fd6c",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 325,
                  "endLine": 325,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1d9ab415c21f6ba9a7b4aaf33924654ad2b78f9120e62c5f9101f7f23ac8a4e5",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 325,
                            "endLine": 325,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2c63ac3fe1282e2da1529793422644df75ebb4e70fe70ca03b356b5f93d37c91",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6bb77f3f9cccd70963f16d96c3976b0e29991545ffbb8f2bd9fd67916cec724e",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2c00e287e3d14ef260fb901684eb926f83ad4e7c3cf900fedb22e0c146a323de",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dfc859ae2f2e8bd0f6f324385ef23479a93b8bf424acd8141e54295f077e6a72",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b41cdc181d8aea56ae01e0ee223393bb5d537a4751fefc9205e15b2e2d4fbb43",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/memoryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b60fa25d82241ced548879140c7218528a1d91fe3ad93d94202ae67c045e542",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/memoryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/memoryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2649962eb8f9387ca464ceee9b01209ec298a510cde53c4b1ffd3d0b0899e5eb",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/memoryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/memoryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 90,
                  "endLine": 90,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "67156d8e3b3405e8843be10fb4200eb9acf2843fb2908af342ebdaf0b25d198a",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/memoryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 90,
                            "endLine": 90,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/addressApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0b4e6737ca74a64470e73599d3800d0118bdcc9546d7031379a7c8c4dc9ec8b5",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/addressApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 393,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/erasureRequestApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0961c34075aa3c59a57f9420e13365c76c103ccf94025a703d689d47531fc1a5",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/erasureRequestApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/erasureRequestApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6917a932fd8f2d3aecfc01a4faef4d0f31a77e43b6106452f5c92ed59101c00d",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/erasureRequestApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/erasureRequestApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 17,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b2e0761284f7a0dbc5c39178eebfa672321312def10714e4003107f2965dd535",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/erasureRequestApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/paymentApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c7d792f868718934a912c10f0754bfab08522b9af78d0b1d33724bc73164b04b",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/paymentApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 393,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d59f77cb0ef2494a23f5a395e53cb109486a244822299e1cce7068875a26367e",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ac3fbc92ccd1d4d397c47828efcc58a4d14a53411aaaee317aa5fc872a493b2d",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3eb42c73e177ffe98a1814cb4183667d9021c6640df69366a0cd51bc128a1205",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5d1130490d828d08193354d6e986bcff4ead21d0ac2cde9b2a0e03047033a8ca",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ffc33b02e537186038b2fb4f1fe1a858d72e3020dde8b2ef9aacce45cc717f1f",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 144,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a2aeb23665708052eeab41456bbb29dd28da134c53c0f08d266bf717b145a2bc",
            "1": "12567ef6.3f481afb.bd65d204.817851c8.79a7d027.211b8a24.6053c1e2.93dd5d54.12567ef6.3f481afb.bd65d204.817851c8.79a7d027.211b8a24.6053c1e2.93dd5d54"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 205,
                  "endLine": 205,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "de51941bffb390f6582796d494f325ab12d1775f33e4505f02f2b1ca6ceac208",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.414e23af.3cee0341.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.414e23af.3cee0341"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 216,
                  "endLine": 216,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9b727f4706d2cedfc94a310c1987e3311e038755bf4a1c48749de54aba26b0eb",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/walletApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f444e54d6f1cb55b2d186701191be55f4ddecfb6b49df47604c402cbdc891584",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/walletApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 393,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/feedbackApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bbd6438c468ff6a24d94427bde15d99a43d2f0ed635ccef7da5188ddae5eba6d",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/feedbackApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/feedbackApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 151,
                  "endLine": 151,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9ef7b8c67734fe723630abf01c2ebd3983188f5b9c7154bb773f00b0169f3481",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/feedbackApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/basketApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9986bfa172a351a53d48b3a1217fba985dfac50c1bba8d2b658a1ddb4f2b20b9",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/basketApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/basketApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0f0347a1d8641be234fe5e2875e88fb157aa2e90ab534b912a07413cd3788ed1",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/basketApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/passwordApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7b5c665dc96aa1896bcdeab6501a6f3143803b82380567291be05c3a8a820b7b",
            "1": "99c6641b.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.bd0778e7.67ee6bdd.99c6641b.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.bd0778e7.67ee6bdd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/passwordApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/passwordApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "747be66d990810db3c8a976a7b7cf81c605eff6e0047565ddccf98e1f4938d17",
            "1": "99c6641b.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.bd0778e7.67ee6bdd.99c6641b.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.bd0778e7.67ee6bdd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/passwordApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/passwordApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f8a5bd8ebbde1503b883d6ea3f6cfc4a7118c7c7604139bd9e42f79487703dfe",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/passwordApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userProfileSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "930dc911af965ba753b800541513242ae291d47ceb7ed85eb6aa634f9a21f8ae",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userProfileSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 393,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "de0d3de63825f91427f6b32f5630e4026afea8a9d6311cf8af3ce9cfc6d7a07a",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.10d85176.83265159.2ae8f124.99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.83265159.2ae8f124"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2d27b3b439cc705df6a78f228a96f41528315c3f7973122c837b85b5b2fdd1b9",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1472422f07582cf1db0cd696d82454e3fd481fd89a3325240d90ea4b534e433a",
            "1": "c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975.c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e9c775d91fdc41ff0cc866c7790cbfb18f62af7fd0e8987582c98e388616bbb9",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a01e344db8304156e778d71d94ee1fe848b4cf17f01eb27cb26508ca30da3fee",
            "1": "c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975.c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 170,
                  "endLine": 170,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7fc85e3a0124be3379ba4fe998af4d27042b8321117ef93a903d05a9a742e94d",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 170,
                            "endLine": 170,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/basketItemApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a826733aed6a90bec31d5a0643b67dcef4b89cf915ef1afeec221f5ee94e678d",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/basketItemApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 393,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deliveryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5f1a5b4bb82d3749834a4f6265f1c6a5e17fc39ecaf41f4649a9becd2b021471",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deliveryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deliveryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec5b69ba3f616cbe301bf4c06c6c597152058589d4941e41f613475bd6cc8e03",
            "1": "c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975.c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deliveryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deliveryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0cff741da8a6f5c72475152942cc4f9649188045aa114209d8ffa466c0af264e",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deliveryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deliveryApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "endLine": 110,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5058cfb0655f75a0d52c2a8ec19f3cb60e50520241b6ad8cca641b9790bf4e63",
            "1": "c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975.c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deliveryApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7285428f8b24feebf5ad8b3018a1bebbb8a05b9e8c53e70d55317df5dafc21aa",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1460ddb787d1d41d28bad9de4ae8b87e04a8581eba1df8133c4d2d1a33fd091b",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a00d4d395b5eb30ee07139ba032922237a13f8cf74439b0d3f067319ecde0777",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 111,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b99abb1126a90e4473ca7ff25985662f467580153d615b3bd6db080d85ba630f",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 151,
                  "endLine": 151,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "604a92823c5c59c563f5fedd8d7b5c6a71bf5901e8c3a32fcc6ab6a3ffa88c22",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 193,
                  "endLine": 193,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9223f3202c2502e1c9b154966136a6d2602a7528750534fd238582a2e1dcec42",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 233,
                  "endLine": 233,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8a348cf1116872b0063f9793b3bc4051ffd3d6488cfeff4fa5e1e3fbc49b186f",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8dc8e518f689a426a7002706e8f5540b55efac87fe6441a914be65ae5ca11e90",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 331,
                  "endLine": 331,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eaff36a37959e2eaa1e6a64265bfdddec4e9f501f8ffbec594c79d360529a0b1",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 331,
                            "endLine": 331,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/productReviewApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 106,
                  "endLine": 106,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ebf5c83e632e4d7846edb3a5ee02393d0877bd393c75543eb8b3a693adc8235f",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/productReviewApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/productReviewApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "endLine": 126,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2160e1d4c6f989cbe1539d84ceabd299d61b1045638a3998422fa019d94881ad",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/productReviewApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 126,
                            "endLine": 126,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in post.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "67824509e4207bf23d5cd94da43201dc5da89a7037ae2d61ff9fdd2e634e19ef",
            "1": "75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.b6dc01e6.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.fb19cbf2.870b3dbe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in post.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0dae97adc8579cfaf6cef2b9a686bbdef30ae5d518c3191599320da093d8e6a8",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.6844341c.ce4a9d89.c53476bb.b6dc01e6.4773f344.bd65d204.e052b9a9.79a7d027.6844341c.d0c8c137.545e9171"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in post.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/securityAnswerApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 44,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cded4b7aea7b64af104a483e02bf7629051ef0b4c46059aae7297ea120517b79",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b5f95001.30fc945a.4773f344.bd65d204.e052b9a9.79a7d027.0ef49ff8.0b4f0b50.b5f95001"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/securityAnswerApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in post.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6adbd29f33d9549fb117b64af01a9b17d39989d73fd50cf9e844f5aef6dcee32",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.b6dc01e6.4773f344.c9330245.d7919eeb.79a7d027.8020cfdf.fb19cbf2.870b3dbe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in post.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "85ac6fe55f41973f84a85c2244aa8f892aaa1eee3d0e7020c66724c91fc56857",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.52789fac.3cee0341.b6dc01e6.4773f344.c9330245.d7919eeb.79a7d027.a536c3b3.fcf36185.5397a62b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in post.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 7,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5e0e758a6f010f69221c12a84195a75d1bfb0ccd1a7abfbfbaacf31ad9713114",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.b6dc01e6.4773f344.c9330245.d7919eeb.79a7d027.a536c3b3.fcf36185.5397a62b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in post.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[post](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9d18892c420c3fc50745b2d07460ccee471e276a10dc885ca721ad135c27d0ac",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.b6dc01e6.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.0b4f0b50.2ae8f124"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 6,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c50929ad2cc5920c994351b3a37c4d48910b449a424a5fb22078b31743e8c070",
            "1": "75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.75efb1df.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "835ef25ea2365d9b955e6111eca0b7a500d2e27088d25144e79155599d4fb0e4",
            "1": "75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.75efb1df.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f0b180bbf355b49c9916b1ffcdbd113be1067d54c6e726fccc83ce3997b63bf7",
            "1": "75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.75efb1df.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 102,
                            "endLine": 102,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "48f6f235e3b3272085b9a7d30c91545018ed2539dcd8024d44599e2ce3cb8ad0",
            "1": "75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.75efb1df.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 131,
                            "endLine": 131,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "endLine": 168,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6ef71fe68daffc437672f577a0282fe080bbdddfcb073a3bcb59e42faaeb4a2d",
            "1": "75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.75efb1df.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 166,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 244,
                  "endLine": 244,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "571ffbe2aa7ab055206ef8cc9075f89a533f3d70f5f3f7052a6c889d3c752fe3",
            "1": "75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.75efb1df.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 242,
                            "endLine": 242,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 289,
                  "endLine": 289,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a529ee97dd67c3f910810830f26b3dbc041a6914fa4d90e2f59a8c75e1bb4ff",
            "1": "75efb1df.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.75efb1df.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 287,
                            "endLine": 287,
                            "startColumn": 31,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/chatbot.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "60c677638ea4d2380d79d3129670f41cb9d1e267dfa94365af7edbc280cef6ec",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/chatbot.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/register.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "93b00ca2332128a7ec7a432d110119b43db934b5b00a3db35a01e4bd5b47d66f",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/register.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/dataErasure.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aaaaf7d4b57a9d77f8ba7a3f73ee950551fdd94996c52bcdb5416c0a1a570a2a",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/dataErasure.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/totpSetup.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "37b5583817d3052b523ad959a5d278680a23e66b4378b0586634be141aaee449",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.9add11d4.28d3f2f0.4773f344.bd65d204.02c26c8f.79a7d027.a3ed429a.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/totpSetup.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/totpSetup.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "16a6fa0b444503783d7aacae82b45971ba04baa81557f67ea92f6d046a4f84f7",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.3cee0341.28d3f2f0.4773f344.19ff72a6.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/totpSetup.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/profile.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "endLine": 3,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c0681218645fe6a8978503f1471582cdbfffe3e96f492bdfc624898c56e27b5e",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/profile.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/contact.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 34,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "54a6b58294c6c81951e783c014743333a35f4f263639a5a479e531f199bd8d0c",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/contact.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/contact.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 34,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "45dd9d65a0a65de4e73da74946748408f4f52a8e41660691a4c1ad72ef9b15b7",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/contact.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3a35e6f4410c416e86ed997239fc1ac4e919fcf0dc8605e5d2827d1ce39417c",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.4ca94ad3.ce4a9d89.3cee0341.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.4ca94ad3.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02a9212fb2535ccff416f1fe2e23d31cd9bd4c7e2a11c935bee88ded121d0795",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.2ae8f124"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 35,
                  "endColumn": 43
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d5064688850a2e7ff8cc269384d068693e71ce6ad19f66024dcc1505ed678225",
            "1": "12567ef6.4773f344.bd65d204.0a48d7c0.79a7d027.89fb1e95.53bb9bcb.3cee0341.28d3f2f0.4773f344.bd65d204.0a48d7c0.79a7d027.89fb1e95.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/changePassword.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "startColumn": 34,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "30dc2b96eee71e274657cee3fee29853d7437d95e775e37e938e44c87ee6e1b9",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 8,
                            "endLine": 8,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 34,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05140dab34f13acabab7625ddf32ab0bb2bbfffa77c0e51f56ca6dd72ee3e591",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/noSql.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/dataExport.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 34,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ef4c02b5053bced209ae696e62274bd400a61c13e407abb6dc4d530afe3bd559",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.3cee0341.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/dataExport.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "startColumn": 44,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f0368557f335386d935a8d00ea6d0f91c46dc5c909115b77361e9c87c8d13297",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "24b07e4b221a5906c5ffad547b6a7016cca02a8f2f53e557a48683ac514d0fa9",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 195,
                  "endLine": 195,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1771061700a90fce4aa39b488d824e09896a9fa6a2c5b20c8dacfc62ce99a1b2",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 236,
                  "endLine": 236,
                  "startColumn": 44,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4405f1e5c16e99ff667d19f9863de00d7ecaf85637c4476baaed4020617d81ab",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 236,
                            "endLine": 236,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 282,
                  "endLine": 282,
                  "startColumn": 44,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7d71545dc3aaf4abcc360b5fc73da92882a56020c68fb17945586439110ae718",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 311,
                  "endLine": 311,
                  "startColumn": 44,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5f3825b6c8c2d995cecdd4fa79467c4829ee35cac38ab049d02052eee0ff4902",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 311,
                            "endLine": 311,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 340,
                  "endLine": 340,
                  "startColumn": 44,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cd34fc80f091a757de488471250102ced4dcbaa90fa99c3da88c0a8e002557f0",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 340,
                            "endLine": 340,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 367,
                  "endLine": 367,
                  "startColumn": 44,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b54c82bd36837c5c845ee2e60d31e1d3cda5d839eaae4eadf5afc2db1862b1b0",
            "1": "01e8e257.4773f344.bd65d204.d7919eeb.79a7d027.f7edcf51.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 367,
                            "endLine": 367,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 397,
                  "endLine": 397,
                  "startColumn": 44,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c6e45cf1faf84ef2067a652e0f73056163dc96a0d87d52a0e3d98feb4a25f09b",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 397,
                            "endLine": 397,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 434,
                  "endLine": 434,
                  "startColumn": 44,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0553b34e14d14e5ce4e743d7daba1e3d0bc9f715c89a10fc02e4311205e06ae1",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.fb19cbf2.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 434,
                            "endLine": 434,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/b2bOrder.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "startColumn": 38,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ced7e1bf69acafdbdae5cf29c85f8b45afab000b23fa708ef25cbc74a5c55a03",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/b2bOrder.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/b2bOrder.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 38,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b06c6c7739d9538465ce9922513021ae2de3a9fb1d89a11121ca5129556c496c",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/b2bOrder.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 14,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/restApi.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "startColumn": 34,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6e4c99273b71ea4dbb9312021474c34c0426edf9eb14cc5cb0139b977125e9d7",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/restApi.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/restApi.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b4f1a4ee626294ef4e0c624df7a4ddb0d4a35fed6e963fb0ffd499c93e5baad2",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/restApi.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/search.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0c6b6cf4581d6be217adfdea0ad564cebcb906d9c28839af935ae4c304e03c21",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/search.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/search.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fff8c0f24f9a0135801b0d431a8fa7b07f5b3e0f3637e007b537acef3176e475",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/search.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/administration.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "763444d2d91753ca87f47bb897856befe579c3ef67b9c68c6f344be67201b151",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/administration.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/basket.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "startColumn": 34,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8b28d5fe2da6267c5b6bbeddd9f5a7d462d5ca27480c9d29e59ac0e2311c494",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/basket.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/basket.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "33410117ec0cffc197c43b2f7cb5dd0b95b6ef1a2adcded3c5e097421aabb458",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.4ad21eac"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/basket.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/complain.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94a59574a59f0729517273eab08764435c494a257467b63cadca7d0d41eeb1b5",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.28d3f2f0.fb31f608.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/complain.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 8,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/deluxe.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7645e62df4880f5a7fd7bac55f92a4d6b7b28006ef88a8d036074b51024a70df",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.4ad21eac"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/deluxe.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/cypress/integration/e2e/deluxe.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c9f90d40377875896b7619489b45644c253b55d8437ff30ece200e0780720113",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.28d3f2f0.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.4ad21eac"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/cypress/integration/e2e/deluxe.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 10,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 105,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5be4ba633e720e82479e85831996074592034c3663f28bd5aad1d0d457610354",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 129,
                  "endLine": 129,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e424413498a001e67e0b30561872c867a7d080b07e466c2230e52b30ae7c10c0",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in register.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 235,
                  "endLine": 235,
                  "startColumn": 29,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1846a9994b9fc4aeeec223a1ffd38b0c359caf83eed868e7e556cf18ee1b9cfc",
            "1": "12567ef6.4773f344.bd65d204.d7919eeb.79a7d027.f7edcf51.8932d8f7.3cee0341.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 235,
                            "endLine": 235,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in register.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 281,
                  "endLine": 281,
                  "startColumn": 29,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "614525858fd054004f8979b2945b99fa853c93a6968c5e9521c07b1fa5514abe",
            "1": "12567ef6.4773f344.bd65d204.d7919eeb.79a7d027.f7edcf51.8932d8f7.3cee0341.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 281,
                            "endLine": 281,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in register.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 310,
                  "endLine": 310,
                  "startColumn": 29,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "556616058a669b2868b2b0098caad3ae3be980d588e9a503dfb7f5d708d2031b",
            "1": "12567ef6.4773f344.bd65d204.d7919eeb.79a7d027.f7edcf51.8932d8f7.3cee0341.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in register.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 339,
                  "endLine": 339,
                  "startColumn": 29,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8ed885c146e8828755205e66877d31589a7771c29b3022d8e271a9b71cad0219",
            "1": "12567ef6.4773f344.bd65d204.d7919eeb.79a7d027.f7edcf51.8932d8f7.3cee0341.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 339,
                            "endLine": 339,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in register.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 396,
                  "endLine": 396,
                  "startColumn": 29,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "10e7fce537bdad9c0820fff6f316e182a00e8a83e92ee4f13db43fe19546178c",
            "1": "12567ef6.4773f344.bd65d204.d7919eeb.79a7d027.f7edcf51.8932d8f7.3cee0341.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 396,
                            "endLine": 396,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 4,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in register.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[register](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 433,
                  "endLine": 433,
                  "startColumn": 29,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e0ee7cf6b9882ae7fc7030d14a9a56c844544b9e7da7b7368a0c467a393fda73",
            "1": "12567ef6.4773f344.bd65d204.d7919eeb.79a7d027.f7edcf51.8932d8f7.3cee0341.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.d85bc50f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 433,
                            "endLine": 433,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 443,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DOMXSS",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into write, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[write](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/data-export/data-export.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 58,
                  "startColumn": 56,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e128cc9f5e97f7da6e2036b33f93601462cb15fcb6476b8a1087ec95a4d3af30",
            "1": "3df95e84.f9697af6.59a2b8c1.a517c54b.d43bc62e.c4a11d72.cd61fc56.dd1bc17e.721b5b6d.f9697af6.59a2b8c1.2f9e311f.4463c21f.07fd8e31.83265159.fc9d7bc7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 63,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 12,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 69,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 62,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 56,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 651,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/Services/two-factor-auth-service.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 42,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "053124f7de915c72b62680448fa0dae1376075b94155babf06de21d09e516311",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.1a479e39.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.1a479e39"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/two-factor-auth-service.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 42,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/Services/two-factor-auth-service.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 42,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0ae497be512b556e109e19c0440dda3c97f83bc158078bfb8ffa858e573ce203",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.1a479e39.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.1a479e39"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/two-factor-auth-service.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 42,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/oauth/oauth.component.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "startColumn": 78,
                  "endColumn": 86
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b203dbff1fae69efd59c7816d07b9e61017893371f623e6d5194e53e6182022a",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8030ba4b.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8030ba4b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/oauth/oauth.component.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 78,
                            "endColumn": 86
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in passwordRepeat.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[passwordRepeat](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/oauth/oauth.component.spec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "startColumn": 111,
                  "endColumn": 125
                }
              }
            }
          ],
          "fingerprints": {
            "0": "16d5be7628d45f333c93c4c34719773cffc76c5cabb20bb1b6d24012894f7656",
            "1": "12567ef6.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.52789fac.8030ba4b.12567ef6.4773f344.607187b5.e052b9a9.79a7d027.fcf3002d.52789fac.8030ba4b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/oauth/oauth.component.spec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 111,
                            "endColumn": 125
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/ZipSlip",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Unsanitized input from Unzipper library flows into createWriteStream, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[Unzipper library](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[createWriteStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/fileUpload.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 33,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a4f83180f7275f72e3570ac2e7b9313118614ac55e01d3ef1312f65ec4bafac6",
            "1": "bfc007a1.70dd3b3b.568208f0.7da15f0a.ef9f7d82.d9a6604d.6f89b54d.23a616eb.86cae134.c1245182.271a59f1.500afa7a.06305abd.d9a6604d.83265159.ef6bffc1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 38,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 34,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 75,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 75,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 51,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 33,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[find](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/dataExport.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 17,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "88cd42243a681444a54fecff58e66e61d1a4d6f8b4a77a59d8a843164ede90c4",
            "1": "d557d5dd.4773f344.607187b5.b5fb64b2.ef9f7d82.34a4d81a.df7e59ba.382555c6.f83d7e82.f9697af6.d06b5ee9.c559ebce.79a7d027.7312b3d3.0334236c.9bb08a3c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 62,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 62,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 58,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 58,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 86,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 54,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 9,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 28,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 34,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 31,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 24,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 22,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 17,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP header flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[an HTTP header](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14)",
              "[find](15)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/dataExport.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 20,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "02260c11562e4be88f4368e7c60041cda3a9c647ff9a26e041d7b3b317e6303b",
            "1": "d557d5dd.4773f344.607187b5.b5fb64b2.ef9f7d82.34a4d81a.df7e59ba.382555c6.f83d7e82.f9697af6.d06b5ee9.73f98346.79a7d027.7312b3d3.0334236c.9bb08a3c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 62,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 62,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 58,
                            "endColumn": 69
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 58,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 86,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 54,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 9,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 9,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 13,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 28,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 35,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 27,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 25,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataExport.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into find, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[find](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/trackOrder.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 15,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7079dc5549fbfeb03e6d27931c39a4e4080ac8f26865606a74b2ca2b9f7a5f07",
            "1": "cf7733e4.4773f344.e255bd8f.b5fb64b2.ef9f7d82.34a4d81a.0b4f0b50.9b5cefb9.5a562d4f.b6e32c83.e255bd8f.c559ebce.79a7d027.32f843a3.0334236c.26150c29"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 100,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 100,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 96,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 92,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 51,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 20,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/trackOrder.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 753,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into findOne, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[findOne](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/likeProductReviews.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 16,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d3e6d95802bfa65cdee1cc840eda6a7b8422f24962e436dd01730e6116e317ec",
            "1": "93652555.4773f344.07efaa4d.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.b6e32c83.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into findOne, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[findOne](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/likeProductReviews.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 28,
                  "endColumn": 35
                }
              }
            }
          ],
          "fingerprints": {
            "0": "508ff7c452d0f0a821d3efbddf9c8ead6c964f813b9ead52ee2ebfe4882ee5f0",
            "1": "93652555.4773f344.07efaa4d.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.b6e32c83.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 20,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 43,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 38,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 36,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[update](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/likeProductReviews.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 22,
                  "endColumn": 28
                }
              }
            }
          ],
          "fingerprints": {
            "0": "98c5e37129708b191ac56a1b1984e16a6f40c2e8df534ee7935629794fa5db85",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.b6e32c83.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 20,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 13,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 22,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[update](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/likeProductReviews.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 30,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cd257a65b7a12c252af31b0293deb39e45738a460da8fd9dbaba89db52b4a305",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.b6e32c83.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 20,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 43,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 38,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 28,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 23,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 21,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 30,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 803,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4)",
              "[update](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/updateProductReviews.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 16,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "403a9b0a3b2d6ed8a1f613645a03631613f8380c2f8e8a86d83422a2f70b66bf",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.b6e32c83.2d2c7aff.08906714.79a7d027.34a4d81a.0334236c.2151aa9e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 7,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 753,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[query](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d48985697bc3484a46997110b4e20aaf43d46a188d04818b5481d517f3c9b99b",
            "1": "cf7733e4.4773f344.607187b5.22b4c01c.ef9f7d82.34a4d81a.a99379eb.25f903e1.3a7c3e38.277c621c.2736cee9.90736870.4be5d9d4.9961f1e5.83265159.40e83381"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 5,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 74,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 28,
                            "endColumn": 160
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[query](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/search.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b7ee22850c3478d62399d565821e318527b49136ba1d7805cfe423d306c127db",
            "1": "cf7733e4.4773f344.607187b5.a517c54b.ef9f7d82.34a4d81a.a99379eb.25f903e1.3a7c3e38.277c621c.2736cee9.90736870.a48c4432.9961f1e5.83265159.40e83381"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 74,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 28,
                            "endColumn": 160
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[query](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3aa8c69c3d3e3b29b56d8b7976f22fe61d46409e99b043574efa5f5ed1da86a3",
            "1": "cf7733e4.4773f344.607187b5.22b4c01c.ef9f7d82.34a4d81a.a99379eb.25f903e1.6849fe68.277c621c.2736cee9.90736870.5ef953d3.9961f1e5.83265159.40e83381"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 74,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 28,
                            "endColumn": 160
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[query](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b6aed44ca2a09811d4ff8648eb9faa85e00355ba5e24f4f1a632d7ca51164b4e",
            "1": "cf7733e4.4773f344.607187b5.22b4c01c.ef9f7d82.34a4d81a.a99379eb.25f903e1.3a7c3e38.fba91761.2736cee9.90736870.5ef953d3.9961f1e5.83265159.40e83381"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 10,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 6,
                            "endLine": 6,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 74,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 28,
                            "endColumn": 160
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/unionSqlInjectionChallenge_3.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[query](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "50203f5f9584f8f7e9c032e0d6054ec59ead8421c628c5df9c8f7289a464be92",
            "1": "ff2c90b2.4773f344.607187b5.7da15f0a.ef9f7d82.34a4d81a.a99379eb.d66579bf.3a7c3e38.4773f344.2736cee9.90736870.5540c8e4.9961f1e5.83265159.40e83381"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 25,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 3,
                            "endLine": 3,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 4,
                            "endLine": 4,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 74,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 28,
                            "endColumn": 162
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "data/static/codefixes/dbSchemaChallenge_1.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 5,
                            "endLine": 5,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3)",
              "[query](4)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/login.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "09be01eefbacb1aebc1d4190a6350dcf1f4d0b85b6721fa1e41d2d51552abd54",
            "1": "cf7733e4.4773f344.607187b5.f1c2bfe1.ef9f7d82.34a4d81a.0b4f0b50.25f903e1.f759b1f9.daa9d8e7.68d1d5e2.90736870.65a3cf23.9961f1e5.fb19cbf2.d9612bd8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 81,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 81,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 77,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 28,
                            "endColumn": 170
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from cookies flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[send](16)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/userProfile.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 64,
                  "startColumn": 15,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "57e9c44ae1f938fba08262cfb0db178f6f208faa6e8f9fe6ed417a0c80ffd8a6",
            "1": "839b1d0f.4773f344.a32ed1a1.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.2f05c567.dca15045.6b0b4bb5.81f55990.4ee3cf31.cca38dbc.34a4d81a.0334236c.2f05c567"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 56,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 28,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 28,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 56,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 69,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 41,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 82,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 20,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 64,
                            "endLine": 64,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[bypassSecurityTrustHtml](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/track-result/track-result.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 45,
                  "endColumn": 68
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9de429582169bef10adcbbeab64357c4368f5420377272a31cead300787cddd",
            "1": "cf7733e4.4773f344.ed5da594.a517c54b.ef9f7d82.32f843a3.0b4f0b50.116a0c7b.cf7733e4.eb7d1438.0a3df746.c8688b2b.ab9128a4.32f843a3.83265159.116a0c7b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 62,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 80,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 57,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 52,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 12,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 40,
                            "endLine": 40,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 78,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 78,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 78,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 69,
                            "endColumn": 110
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 45,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[bypassSecurityTrustHtml](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/data-export/data-export.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 37,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1ea030f297935ab7db59fe215a71ce9c51aacfc72938e77d615d828f87adc0e0",
            "1": "3df95e84.4773f344.607187b5.74eb2808.ef9f7d82.8020cfdf.83265159.428468b6.a6348f37.70b638aa.8b3a84e3.c559ebce.4463c21f.51429c53.83265159.7f547f77"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 68,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 12,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 30,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 54,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 61,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 61,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 37,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[bypassSecurityTrustHtml](17)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/score-board/score-board.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 182,
                  "endLine": 182,
                  "startColumn": 44,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d6a425dd0c13f79ce2235d79c86719e9e0253aa72e87686d7901dc66cc7d662a",
            "1": "7921a677.4773f344.607187b5.a517c54b.ef9f7d82.8020cfdf.df7e59ba.cde67692.72e8bf12.664e3b30.21371afe.c8688b2b.fbac9e17.f6976444.f0256597.dffd34e3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 73,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 91,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 91,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 68,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 63,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 12,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 63,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 95,
                            "endLine": 95,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 31,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 34,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 39,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 181,
                            "endLine": 181,
                            "startColumn": 25,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 68,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 68,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 182,
                            "endLine": 182,
                            "startColumn": 44,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[bypassSecurityTrustHtml](17)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/about/about.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "startColumn": 47,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f9956f2e2bf8c2368301959ba5ebcaaf62574fb5888508d0a58348694413dcc7",
            "1": "7921a677.4773f344.607187b5.a517c54b.ef9f7d82.81760a8a.566b8f28.cde67692.cf7733e4.3635f48a.d7512ab0.e6336d2f.4463c21f.7312b3d3.83265159.9b5cefb9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 36,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 23,
                            "startColumn": 12,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 44,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 76,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 117,
                            "endColumn": 126
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 71,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 71,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 71,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 47,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 603,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[bypassSecurityTrustHtml](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/administration/administration.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 37,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f704478f5fd41f99c5a9763f52279b40f850134c596deb4b4002695f142a4835",
            "1": "839b1d0f.4773f344.607187b5.824d2503.ef9f7d82.8020cfdf.0b4f0b50.ae94f388.32defead.6b0b4bb5.81f55990.72a8f743.4463c21f.7312b3d3.83265159.fdec07b7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 112,
                            "endColumn": 125
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 7,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 107,
                            "endColumn": 110
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 102,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 12,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 40,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 77,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 119,
                            "endColumn": 123
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 61,
                            "endColumn": 138
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 37,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[bypassSecurityTrustHtml](13)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/administration/administration.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66,
                  "startColumn": 43,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "77840b10eebd8c105c27ee070d8f9b50f7b3b6fff3579fe62006230b7f400d44",
            "1": "7921a677.4773f344.607187b5.d7919eeb.ef9f7d82.81760a8a.566b8f28.cde67692.a6348f37.70b638aa.8b18f948.4a954e56.4463c21f.7312b3d3.83265159.a83217da"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 36,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 23,
                            "startColumn": 12,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 44,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 18,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 67,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 67,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 43,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from browser storage flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[browser storage](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[bypassSecurityTrustHtml](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36,
                  "startColumn": 43,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "046e16ab4dbfb48a4781c00cff82e58e29672069dc0a150e72aed4b8da04427a",
            "1": "cf7733e4.4773f344.607187b5.400fd3fd.90100e46.8020cfdf.0b4f0b50.66506c4e.46b7c801.706318d0.86aa5c73.400fd3fd.4463c21f.8020cfdf.cebf5fac.5691ba88"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 32,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 32,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 11,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 67,
                            "endColumn": 111
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 43,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 603,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[bypassSecurityTrustHtml](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/search-result/search-result.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 152,
                  "endLine": 152,
                  "startColumn": 41,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9239b28abc2036f936478cc21cdc7d394f8d8b041000f5788398b708885e7e77",
            "1": "b7602041.4773f344.607187b5.c484ae4b.ef9f7d82.8020cfdf.ea235696.cde67692.1f17e802.b6e32c83.72aa1700.c484ae4b.4463c21f.33e93315.ca2eca62.5b5a306a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 145,
                            "endLine": 145,
                            "startColumn": 9,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 147,
                            "endLine": 147,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 58,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 65,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 152,
                            "endLine": 152,
                            "startColumn": 41,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 10,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[send](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/recycles.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 16,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ca83cad0f9e3992c2cdcd287969b4fe89bf3906a312dc6b114fcfaead4419687",
            "1": "716f11c4.4773f344.cae2544c.289fcdd5.d3562abd.8020cfdf.83265159.2f05c567.9dc2a0d3.b6e32c83.cae2544c.289fcdd5.79a7d027.f8890b3c.0334236c.e6930396"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 7,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 5,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 45,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 27,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 21,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 603,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/reDOS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized user input from an HTTP parameter flows into RegExp, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[RegExp](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "startColumn": 25,
                  "endColumn": 31
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9e98f0379e263f7cb9050284c709c4445b4f4b6058e82965c9990e56824b11c8",
            "1": "cf7733e4.1a0b1e78.8b18f948.d7919eeb.a5a48e72.0c17bcdd.0b4f0b50.91c60b7d.42b1dc63.b6e32c83.7781f82f.591d889d.a5a48e72.9a2815ac.37913e55.7dffa882"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 45,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 32,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 25,
                            "endColumn": 31
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/reDOS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized user input from an HTTP parameter flows into RegExp, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[RegExp](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "startColumn": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3b451edd12795525f8c89a82cd8016a00356bf7de6ca36f71704b145a162d85",
            "1": "cf7733e4.4773f344.607187b5.44e38cbd.a5a48e72.0c17bcdd.0b4f0b50.91c60b7d.42b1dc63.277c621c.7781f82f.591d889d.a5a48e72.9a2815ac.37913e55.7dffa882"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 45,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 28,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/reDOS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized user input from an HTTP parameter flows into RegExp, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[RegExp](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "startColumn": 28,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b4e2715f1d807ef5a4a4252e1dec11a44fc09b353c943a463bd84e3240e199dd",
            "1": "cf7733e4.4773f344.607187b5.44e38cbd.a5a48e72.0c17bcdd.0b4f0b50.91c60b7d.42b1dc63.277c621c.7781f82f.591d889d.a5a48e72.9a2815ac.37913e55.7dffa882"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 45,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 35,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/reDOS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized user input from an HTTP parameter flows into RegExp, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[RegExp](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 25,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f11096bf59d597a2043dd2981392f57967a1e522da8d2f8de6ddb6acd9c7ac1a",
            "1": "42b1dc63.4773f344.c9330245.c559ebce.8d22f254.f8890b3c.83265159.7dffa882.42b1dc63.b6e32c83.c9330245.c559ebce.e7b07763.f8890b3c.83265159.7dffa882"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 45,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 45,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 35,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/reDOS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized user input from an HTTP parameter flows into match, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[match](7)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108,
                  "startColumn": 33,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b1d6532a896704004df038f6bd1d372f8a3ad703f1286dd23f37a484f4658d63",
            "1": "988d3c10.4773f344.8b18f948.d7919eeb.ef9f7d82.0c17bcdd.0b4f0b50.dc69d918.988d3c10.277c621c.7781f82f.591d889d.79a7d027.9a2815ac.37913e55.7dffa882"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 49,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 45,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 39,
                            "endColumn": 137
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 33,
                            "endColumn": 38
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/reDOS",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Unsanitized user input from the HTTP request body flows into RegExp, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "markdown": "Unsanitized user input from {0} {1} into {2}, where it is used to build a regular expression. This may result in a Regular expression Denial of Service attack (reDOS).",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[RegExp](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 183,
                  "endLine": 183,
                  "startColumn": 25,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7404b209325c00c7bd9a48648174fae90c1c2e16e70b604be99a4967cd94a684",
            "1": "42b1dc63.4773f344.c9330245.c559ebce.8d22f254.0c17bcdd.83265159.7dffa882.f759b1f9.b6e32c83.c9330245.591d889d.8d22f254.cb9c4e89.37913e55.7dffa882"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 45,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 101,
                            "endLine": 101,
                            "startColumn": 27,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 35,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Ssrf",
          "ruleIndex": 12,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into request.get, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[request.get](6)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 30,
                  "endColumn": 37
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aac46065ef2da0fd582140907a91ceb700478885678eb2514bd6be88f423f1a6",
            "1": "dca15045.70dd3b3b.568208f0.d7919eeb.79a7d027.98c7c24d.df7e59ba.377cd288.6849fe68.b6e32c83.568208f0.08906714.79a7d027.98c7c24d.83265159.a41fb358"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 30,
                            "endColumn": 37
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/JwtDecodeMethod",
          "ruleIndex": 13,
          "level": "warning",
          "message": {
            "text": "A JWT decode() method is used that decodes the token but does not check its validity or integrity. If the JWT has originated from an untrusted source, decoded data could be crafted by an attacker and should not be considered safe to use or process within the application. Always use JWT verification methods to validate the structure and integrity of a token.",
            "markdown": "A JWT decode() method is used that decodes the token but does not check its validity or integrity. If the JWT has originated from an untrusted source, decoded data could be crafted by an attacker and should not be considered safe to use or process within the application. Always use JWT verification methods to validate the structure and integrity of a token.",
            "arguments": []
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/verify.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 41,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bc71273e568c381ab0dd59ec5ff2d4cce3026fcfccf569bc46541a49b4742d4c",
            "1": "46b7c801.4773f344.0f22609d.72a8f743.ef9f7d82.8020cfdf.ea4b1c47.ae94f388.46b7c801.4773f344.0f22609d.72a8f743.ef9f7d82.8020cfdf.ea4b1c47.ae94f388"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/verify.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 41,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedSecret/test",
          "ruleIndex": 14,
          "level": "note",
          "message": {
            "text": "Hardcoded value is used as a cipher key (in jsonwebtoken.sign). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[cipher key (in jsonwebtoken.sign)](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "endLine": 149,
                  "startColumn": 8,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8927f4670c679414a5cdfb3bd6bff6b363ce47acae79bd92803aa7e46f9f21a7",
            "1": "20326186.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.df938d4d.45cbaa21.20326186.4773f344.8b18f948.d7919eeb.3c31e05c.c785452b.df938d4d.8a8217fe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 149,
                            "endLine": 149,
                            "startColumn": 8,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 31,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "md5 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm (e.g. SHA256).",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm (e.g. SHA256).",
            "arguments": [
              "[md5](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/insecurity.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 34,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4831ba372b66d0e7593dc19a4ac60b7132947316327a56b9ad80e6ce4a637405",
            "1": "3df95e84.4773f344.191eaf2b.d9da6552.ef9f7d82.8020cfdf.7a8c7288.71520ffe.3df95e84.4773f344.191eaf2b.d9da6552.ef9f7d82.8020cfdf.7a8c7288.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 52,
                            "endColumn": 57
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 34,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "md5 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm (e.g. SHA256).",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm (e.g. SHA256).",
            "arguments": [
              "[md5](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Gruntfile.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 19,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b558b0071d15da14acf0d20931e6ea8a9195a4480cbb4666b48f280a08dea9f4",
            "1": "37bc1bfe.d2255a1c.191eaf2b.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.71520ffe.37bc1bfe.4773f344.191eaf2b.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.71520ffe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "Gruntfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "Gruntfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 15,
          "level": "warning",
          "message": {
            "text": "SHA-1 hash (used in jssha) is insecure. Consider changing it to a secure hashing algorithm (e.g. SHA256).",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm (e.g. SHA256).",
            "arguments": [
              "[SHA-1](0)",
              "[jssha](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5f8161487ca0fff033d6573e4a1e4397728cdeca418e79c6b595dda58492ea9e",
            "1": "47d62eac.4773f344.2ff86584.d7919eeb.a21268d8.8c503821.4682c195.b8ef0081.47d62eac.4773f344.2ff86584.d7919eeb.a21268d8.8c503821.4682c195.b8ef0081"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 97,
                            "endLine": 97,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/Ssti",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into pug.compile, where it is used to construct a template that gets rendered. This may result in a Server-Side Template Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to construct a template that gets rendered. This may result in a Server-Side Template Injection vulnerability.",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19),(20),(21),(22),(23),(24),(25),(26),(27),(28),(29),(30),(31),(32),(33),(34),(35)",
              "[pug.compile](36)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/userProfile.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 22,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "488eccdefac949e720a52fe3dada859a704847eb5167cb70a3e99e7cb671d06a",
            "1": "3baa938b.4773f344.8b18f948.d7919eeb.8da73395.8020cfdf.cd61fc56.571b58cd.6849fe68.6b0b4bb5.ec66eec9.4ee3cf31.fd661388.98863ef5.0334236c.26150c29"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 56,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 28,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 28,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 19,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 26,
                            "endLine": 26,
                            "startColumn": 56,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 31,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 56,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 33,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 21,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 22,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 23,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 24,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 50,
                            "endLine": 50,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 25,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 26,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 27,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 28,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 29,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 30,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 53,
                            "endLine": 53,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 31,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 32,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 33,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 22,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 34,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 31,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 35,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 34,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 36,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 22,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/PrototypePollution",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into a member access and is used to access a property of this object by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.",
            "markdown": "Unsanitized input from {0} {1} into a member access and is used to access a property of {2} by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[this object](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 215,
                  "endLine": 215,
                  "startColumn": 14,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c33cd6f8bc0a0f302178476a90f7c220c5785f450b5bdc9d90138ede3a9c6874",
            "1": "227ff053.4773f344.7b031cb3.7da15f0a.29fe289f.0c17bcdd.83265159.282d011e.f759b1f9.277c621c.7781f82f.591d889d.3f452f8c.9a2815ac.37913e55.7dffa882"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 180,
                            "endLine": 180,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 183,
                            "endLine": 183,
                            "startColumn": 45,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 99,
                            "endLine": 99,
                            "startColumn": 43,
                            "endColumn": 54
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 194,
                            "endLine": 194,
                            "startColumn": 50,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 215,
                            "endLine": 215,
                            "startColumn": 33,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 31,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 24,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 5,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/PrototypePollution",
          "ruleIndex": 17,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into a member access and is used to access a property of this object by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.",
            "markdown": "Unsanitized input from {0} {1} into a member access and is used to access a property of {2} by name. This may allow a malicious user to pollute the Object.prototype and cause a crash, remote code execution or logic bypasses.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[this object](14)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeFixes.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 16,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "62ad298662aa033db34d6144e49901c51e286841d44ed6cf80d79b58bb6c6a88",
            "1": "227ff053.4773f344.7b031cb3.7da15f0a.ef9f7d82.0c17bcdd.83265159.7a5725d3.f759b1f9.b6e32c83.c9330245.591d889d.79a7d027.019f1fd1.37913e55.beb4376f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 52,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 34,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 30,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 16,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 24,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 15,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 12,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/accuracy.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 66,
                            "endLine": 66,
                            "startColumn": 5,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into createWriteStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[createWriteStream](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 36,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1c16b2e6cd387c79628b34528ac182d051d393184d4d6a4421a3ceaa6a51e3d0",
            "1": "cf7733e4.4773f344.607187b5.876f04ab.ef9f7d82.8020cfdf.e1eea83d.25f903e1.6849fe68.bf4464f1.81f55990.4ee3cf31.3f452f8c.c3621f1a.e1eea83d.a41fb358"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 64,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 60,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 56,
                            "endColumn": 59
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 32,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 32,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 54,
                            "endColumn": 138
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 36,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 18,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into fs.readFileSync, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fs.readFileSync](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeFixes.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 46,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "14af06d4c3fd1f9ecf654eb2f045334bd689470d8a86b22218e9001e2b5b887d",
            "1": "bfc007a1.4773f344.7b031cb3.d7919eeb.474b452e.0c17bcdd.7b7de394.beb4376f.f759b1f9.b6e32c83.c9330245.591d889d.79a7d027.019f1fd1.37913e55.6de01bb2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 19,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 15,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 29,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 27,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 52,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 91,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 62,
                            "endColumn": 108
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 46,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its length property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[length](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 172,
                  "endLine": 172,
                  "startColumn": 40,
                  "endColumn": 46
                }
              }
            }
          ],
          "fingerprints": {
            "0": "81cf021729a9effc86e1cca509f97b9988ffd8f4cf03338624a5d632d361640d",
            "1": "5f3afdcf.862b2282.3dca777a.d4775b40.29fe289f.8020cfdf.cd61fc56.cc4cacbb.bc790f56.b6e32c83.673eb66b.08906714.29fe289f.db1af830.83265159.cc4cacbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 26,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 40,
                            "endColumn": 46
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its includes property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[includes](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 173,
                  "endLine": 173,
                  "startColumn": 43,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5ccd4713d85bea0bbd3b545cb995066b611aa6f0354c0eab698d0bcc0890fe8c",
            "1": "5f3afdcf.4773f344.607187b5.c559ebce.8beb39a0.8020cfdf.7a8c7288.cc4cacbb.bc790f56.b6e32c83.673eb66b.08906714.29fe289f.db1af830.83265159.cc4cacbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 29,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 173,
                            "endLine": 173,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its filter property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[filter](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeSnippet.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 175,
                  "endLine": 175,
                  "startColumn": 36,
                  "endColumn": 42
                }
              }
            }
          ],
          "fingerprints": {
            "0": "84bb356f9d66aa0f137d2b46a3eb16fec3e704e0f4e9726c28cd5b98dbcfadb4",
            "1": "5f3afdcf.4773f344.8b18f948.c559ebce.8d22f254.8020cfdf.ea4b1c47.cc4cacbb.bc790f56.b6e32c83.673eb66b.08906714.29fe289f.db1af830.83265159.cc4cacbb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 22,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 191,
                            "endLine": 191,
                            "startColumn": 39,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeSnippet.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 175,
                            "endLine": 175,
                            "startColumn": 36,
                            "endColumn": 42
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its match property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[match](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 15,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b53bc522a704bc9a1aae131fc60f5304810a3a1b85a2bf8a31ca84e903c5da6",
            "1": "6849fe68.4773f344.d2ee7ce0.d7919eeb.b6be8b13.8020cfdf.ec6ba6ab.fcee3017.6849fe68.b6e32c83.8b18f948.08906714.b6be8b13.cb9c4e89.83265159.a41fb358"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 19,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its split property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[split](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 30,
                  "startColumn": 122,
                  "endColumn": 127
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3da9056652eaad5fc06f32f1c0cdd3eab5c6f486d12f653e97b9072bc8e7ce2c",
            "1": "dca15045.bf4464f1.c13ab5fc.73f98346.b6be8b13.8020cfdf.2a970955.e6a09cc0.dca15045.bf4464f1.568208f0.08906714.79a7d027.98c7c24d.83265159.a41fb358"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 118,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 122,
                            "endColumn": 127
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HttpToHttps/test",
          "ruleIndex": 20,
          "level": "note",
          "message": {
            "text": "http.get uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.get](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/productReviewApiSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 63,
                  "startColumn": 5,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0bd528bd93042011a5dc7a58fb55660cf3b17d6021e4a347de38280f06532a37",
            "1": "cf7733e4.1a0b1e78.b5b4772f.c559ebce.2fce9a75.a362d65a.cd61fc56.9b5cefb9.cf7733e4.4773f344.607187b5.c559ebce.2fce9a75.a362d65a.cd61fc56.9b5cefb9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/productReviewApiSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 63,
                            "endLine": 63,
                            "startColumn": 5,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 73,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a5631f7bbe8c4f75b2936af3fce653078128c543ee967dd95c2fb236f397d355",
            "1": "fc3065be.4773f344.607187b5.e052b9a9.79a7d027.8020cfdf.7393bb6c.d28377a2.fc3065be.4773f344.b7320c2f.e052b9a9.79a7d027.8020cfdf.7393bb6c.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 394,
                            "endLine": 394,
                            "startColumn": 24,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 73,
                            "endLine": 73,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 233,
                  "endLine": 233,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c68653f9a32e719ef53546c6cbda0927f965722019e54740e2e4be6a553812f",
            "1": "fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb.fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 249,
                  "endLine": 249,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "95beb7ff32af1df052e06aeb80149b62f30a3d392ef8d69fba9710f989d77817",
            "1": "fc3065be.4773f344.607187b5.d7919eeb.79a7d027.8020cfdf.cb835038.01bd15bb.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 233,
                            "endLine": 233,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 279,
                  "endLine": 279,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "99f3dc281a7d636a4d2dd37c626855ec0217944425508d11e1fe3a438c8371cf",
            "1": "fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb.fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 295,
                  "endLine": 295,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b434ac74001b03bc6604fb4d49ea4bad952c7dd771eb731fa3b041ac22e2c3fc",
            "1": "fc3065be.4773f344.607187b5.d7919eeb.79a7d027.8020cfdf.cb835038.01bd15bb.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 279,
                            "endLine": 279,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 308,
                  "endLine": 308,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3a542aa356de8c681a2d75f37c806e57d4eeb2b5c4f37358bd74f701f42f5e3b",
            "1": "fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb.fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 324,
                  "endLine": 324,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f0d9eb3327ff2a6c779f5091361f3e38a428af8130fe7273626ed6ba5ad2f54f",
            "1": "fc3065be.4773f344.607187b5.d7919eeb.79a7d027.f7edcf51.a4deb528.01bd15bb.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 308,
                            "endLine": 308,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 324,
                            "endLine": 324,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 337,
                  "endLine": 337,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fad085482e26d869f66e896ffe0757e123fbbea30243395a538864a83b11b2e2",
            "1": "fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb.fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 337,
                            "endLine": 337,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 337,
                            "endLine": 337,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 353,
                  "endLine": 353,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9b03927fc894d11c782e8368544feb99f0ac71646ff517c2c02351c44fcac6c1",
            "1": "fc3065be.4773f344.607187b5.d7919eeb.79a7d027.8020cfdf.cb835038.01bd15bb.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 337,
                            "endLine": 337,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 353,
                            "endLine": 353,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 21,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 380,
                  "endLine": 380,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "30152349f3aead5e5bd6cea68c3c31d83ff6f0a2df65ae90f2dc67bda6c2da6e",
            "1": "fc3065be.4773f344.0e553939.e052b9a9.79a7d027.8020cfdf.7393bb6c.da35a099.fc3065be.4773f344.0e553939.e052b9a9.79a7d027.8020cfdf.7393bb6c.e98bb294"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 365,
                            "endLine": 365,
                            "startColumn": 24,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 380,
                            "endLine": 380,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/languages.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 10,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a915535c27c481c411594f05b4cc1789b3c7fd1aab9eb6ed7f5481f5f09819aa",
            "1": "099c30d7.9c6e2949.8b18f948.c559ebce.fd1fa73f.5eabb05b.83265159.be9bb487.c3f8dfad.b6e32c83.eff3b32f.4f83689a.fd1fa73f.becd9ff1.83265159.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 10,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/userProfile.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 10,
                  "endColumn": 58
                }
              }
            }
          ],
          "fingerprints": {
            "0": "05062c87dc99cecece6ca2e0dcc2ca2534249be1f78e70af6121ef577079ec8c",
            "1": "4923bf76.4773f344.8b8d7a0c.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.c3f8dfad.b6e32c83.4937536e.4f83689a.fd1fa73f.cb9c4e89.83265159.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 10,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/vulnCodeFixes.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 38,
                  "endColumn": 120
                }
              }
            }
          ],
          "fingerprints": {
            "0": "04d799cfc802fbc5285632879f6a785eda061d977dc7ecc9b954398bb196f4ea",
            "1": "a5aeea87.9c6e2949.8b18f948.c559ebce.fd1fa73f.5eabb05b.83265159.67311e43.a05cdd83.b6e32c83.7b031cb3.c559ebce.3a08f0d2.becd9ff1.7b7de394.6de01bb2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 38,
                            "endColumn": 120
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/vulnCodeFixes.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 46,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/dataErasure.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 17,
                  "endColumn": 71
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fa2757c8d403548a54f45a6bdca7867a0a28107f4bd2a9fcb9ecf18200f9053b",
            "1": "92e26ef2.4773f344.8b18f948.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.92e26ef2.b6e32c83.8b18f948.c559ebce.fd1fa73f.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataErasure.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 17,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataErasure.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/dataErasure.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 18,
                  "endColumn": 106
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d99bbb6f4fb9f46875c66e28d01504c628074d304504c645efae8ae129582793",
            "1": "92e26ef2.4773f344.aa4dda5f.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.92e26ef2.4773f344.782a8fc0.c559ebce.fd1fa73f.5fce695c.83265159.29e8dc3a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataErasure.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 18,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/dataErasure.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/videoHandler.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 10,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "625211daf741757913e91df57456e491e76d32baae2aa31b7324a621e8720991",
            "1": "4923bf76.9c6e2949.8b18f948.c559ebce.fd1fa73f.5eabb05b.83265159.be9bb487.1db69a21.b6e32c83.8b18f948.c559ebce.c2cde80a.2da1a176.83265159.041df0b3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/videoHandler.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 10,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/videoHandler.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 23,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/videoHandler.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 10,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9754d33d2c25b45e7b1d70df4c2aa0dac731bdf5e9908e2a58e5b5c245eb4d2d",
            "1": "4923bf76.4773f344.8b8d7a0c.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.c3f8dfad.b6e32c83.a32ed1a1.4f83689a.fd1fa73f.cb9c4e89.83265159.b325124d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/videoHandler.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 10,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/videoHandler.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 8,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 653,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/easterEgg.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 10,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b2a03956040ab16ee56bbb15c3048b7527a6ed4334dec2935c6ecff64499a1d1",
            "1": "4923bf76.4773f344.8b8d7a0c.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.87ba341e.b6e32c83.4937536e.c559ebce.fd1fa73f.cb9c4e89.83265159.041df0b3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/easterEgg.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 10,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/easterEgg.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 603,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/privacyPolicyProof.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 10,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "520b030a888a2b60aae83aed160b919d30cba715196707e27f44902cde0ce139",
            "1": "4923bf76.4773f344.8b8d7a0c.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.87ba341e.b6e32c83.4937536e.c559ebce.0cc54b27.cb9c4e89.83265159.041df0b3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/privacyPolicyProof.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 10,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/privacyPolicyProof.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 603,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 22,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/premiumReward.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 10,
                  "endColumn": 38
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c5bd04663f7f2d99a5b4a2306e5c5879f1dbb72ab7f55bd60d48380ef3b7d88",
            "1": "4923bf76.4773f344.8b8d7a0c.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.40bc0bae.b6e32c83.4937536e.c559ebce.fd1fa73f.cb9c4e89.83265159.041df0b3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/premiumReward.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 10,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/premiumReward.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 603,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              },
              {
                "label": true,
                "type": "commonlyFixed"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 14,
            "isSupported": true,
            "lang": "JavaScript"
          },
          {
            "files": 511,
            "isSupported": true,
            "lang": "TypeScript"
          },
          {
            "files": 57,
            "isSupported": true,
            "lang": "HTML"
          },
          {
            "files": 3,
            "isSupported": true,
            "lang": "Python"
          },
          {
            "files": 7,
            "isSupported": true,
            "lang": "XML"
          }
        ]
      }
    }
  ]
}
